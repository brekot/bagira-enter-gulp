{"version":3,"file":"main.js","mappings":"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","sources":["webpack://gulp/./src/blocks/modules/password-toggle/password-toggle.js","webpack://gulp/./src/blocks/modules/user-type/user-type.js","webpack://gulp/./src/js/imask.js","webpack://gulp/./src/js/import/modules.js","webpack://gulp/./src/js/script.js","webpack://gulp/webpack/bootstrap","webpack://gulp/webpack/runtime/compat get default export","webpack://gulp/webpack/runtime/define property getters","webpack://gulp/webpack/runtime/hasOwnProperty shorthand","webpack://gulp/webpack/runtime/make namespace object","webpack://gulp/./src/js/index.js"],"sourcesContent":["document.addEventListener('click', (e) => {\n\n    let elem = e.target.closest('.password-toggle');\n\n    if (elem)\n    {\n        let input = elem.previousElementSibling;\n\n        if (input.type === \"password\") input.type = \"text\";\n        else input.type = \"password\";\n    }\n});","document.addEventListener('click', (e) => {\n\n    let elem = e.target.closest('.user-type__link');\n\n    if (elem)\n    {\n        document.querySelector('.user-type__link_active').classList.remove('user-type__link_active');\n\n        document.querySelectorAll('.user-type-block').forEach((e) => e.classList.add('d-none'));\n\n        elem.classList.add('user-type__link_active');\n\n        document.querySelector('.user-type-block[data-type=\"' + elem.dataset.type + '\"]').classList.remove('d-none');\n    }\n});","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.IMask = {}));\n})(this, (function (exports) { 'use strict';\n\n  /** Checks if value is string */\n  function isString(str) {\n    return typeof str === 'string' || str instanceof String;\n  }\n\n  /** Checks if value is object */\n  function isObject(obj) {\n    var _obj$constructor;\n    return typeof obj === 'object' && obj != null && (obj == null || (_obj$constructor = obj.constructor) == null ? void 0 : _obj$constructor.name) === 'Object';\n  }\n  function pick(obj, keys) {\n    if (Array.isArray(keys)) return pick(obj, (_, k) => keys.includes(k));\n    return Object.entries(obj).reduce((acc, _ref) => {\n      let [k, v] = _ref;\n      if (keys(v, k)) acc[k] = v;\n      return acc;\n    }, {});\n  }\n\n  /** Direction */\n  const DIRECTION = {\n    NONE: 'NONE',\n    LEFT: 'LEFT',\n    FORCE_LEFT: 'FORCE_LEFT',\n    RIGHT: 'RIGHT',\n    FORCE_RIGHT: 'FORCE_RIGHT'\n  };\n\n  /** Direction */\n\n  function forceDirection(direction) {\n    switch (direction) {\n      case DIRECTION.LEFT:\n        return DIRECTION.FORCE_LEFT;\n      case DIRECTION.RIGHT:\n        return DIRECTION.FORCE_RIGHT;\n      default:\n        return direction;\n    }\n  }\n\n  /** Escapes regular expression control chars */\n  function escapeRegExp(str) {\n    return str.replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, '\\\\$1');\n  }\n\n  // cloned from https://github.com/epoberezkin/fast-deep-equal with small changes\n  function objectIncludes(b, a) {\n    if (a === b) return true;\n    const arrA = Array.isArray(a),\n      arrB = Array.isArray(b);\n    let i;\n    if (arrA && arrB) {\n      if (a.length != b.length) return false;\n      for (i = 0; i < a.length; i++) if (!objectIncludes(a[i], b[i])) return false;\n      return true;\n    }\n    if (arrA != arrB) return false;\n    if (a && b && typeof a === 'object' && typeof b === 'object') {\n      const dateA = a instanceof Date,\n        dateB = b instanceof Date;\n      if (dateA && dateB) return a.getTime() == b.getTime();\n      if (dateA != dateB) return false;\n      const regexpA = a instanceof RegExp,\n        regexpB = b instanceof RegExp;\n      if (regexpA && regexpB) return a.toString() == b.toString();\n      if (regexpA != regexpB) return false;\n      const keys = Object.keys(a);\n      // if (keys.length !== Object.keys(b).length) return false;\n\n      for (i = 0; i < keys.length; i++) if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n      for (i = 0; i < keys.length; i++) if (!objectIncludes(b[keys[i]], a[keys[i]])) return false;\n      return true;\n    } else if (a && b && typeof a === 'function' && typeof b === 'function') {\n      return a.toString() === b.toString();\n    }\n    return false;\n  }\n\n  /** Selection range */\n\n  /** Provides details of changing input */\n  class ActionDetails {\n    /** Current input value */\n\n    /** Current cursor position */\n\n    /** Old input value */\n\n    /** Old selection */\n\n    constructor(opts) {\n      Object.assign(this, opts);\n\n      // double check if left part was changed (autofilling, other non-standard input triggers)\n      while (this.value.slice(0, this.startChangePos) !== this.oldValue.slice(0, this.startChangePos)) {\n        --this.oldSelection.start;\n      }\n      if (this.insertedCount) {\n        // double check right part\n        while (this.value.slice(this.cursorPos) !== this.oldValue.slice(this.oldSelection.end)) {\n          if (this.value.length - this.cursorPos < this.oldValue.length - this.oldSelection.end) ++this.oldSelection.end;else ++this.cursorPos;\n        }\n      }\n    }\n\n    /** Start changing position */\n    get startChangePos() {\n      return Math.min(this.cursorPos, this.oldSelection.start);\n    }\n\n    /** Inserted symbols count */\n    get insertedCount() {\n      return this.cursorPos - this.startChangePos;\n    }\n\n    /** Inserted symbols */\n    get inserted() {\n      return this.value.substr(this.startChangePos, this.insertedCount);\n    }\n\n    /** Removed symbols count */\n    get removedCount() {\n      // Math.max for opposite operation\n      return Math.max(this.oldSelection.end - this.startChangePos ||\n      // for Delete\n      this.oldValue.length - this.value.length, 0);\n    }\n\n    /** Removed symbols */\n    get removed() {\n      return this.oldValue.substr(this.startChangePos, this.removedCount);\n    }\n\n    /** Unchanged head symbols */\n    get head() {\n      return this.value.substring(0, this.startChangePos);\n    }\n\n    /** Unchanged tail symbols */\n    get tail() {\n      return this.value.substring(this.startChangePos + this.insertedCount);\n    }\n\n    /** Remove direction */\n    get removeDirection() {\n      if (!this.removedCount || this.insertedCount) return DIRECTION.NONE;\n\n      // align right if delete at right\n      return (this.oldSelection.end === this.cursorPos || this.oldSelection.start === this.cursorPos) &&\n      // if not range removed (event with backspace)\n      this.oldSelection.end === this.oldSelection.start ? DIRECTION.RIGHT : DIRECTION.LEFT;\n    }\n  }\n\n  /** Applies mask on element */\n  function IMask(el, opts) {\n    // currently available only for input-like elements\n    return new IMask.InputMask(el, opts);\n  }\n\n  // TODO can't use overloads here because of https://github.com/microsoft/TypeScript/issues/50754\n  // export function maskedClass(mask: string): typeof MaskedPattern;\n  // export function maskedClass(mask: DateConstructor): typeof MaskedDate;\n  // export function maskedClass(mask: NumberConstructor): typeof MaskedNumber;\n  // export function maskedClass(mask: Array<any> | ArrayConstructor): typeof MaskedDynamic;\n  // export function maskedClass(mask: MaskedDate): typeof MaskedDate;\n  // export function maskedClass(mask: MaskedNumber): typeof MaskedNumber;\n  // export function maskedClass(mask: MaskedEnum): typeof MaskedEnum;\n  // export function maskedClass(mask: MaskedRange): typeof MaskedRange;\n  // export function maskedClass(mask: MaskedRegExp): typeof MaskedRegExp;\n  // export function maskedClass(mask: MaskedFunction): typeof MaskedFunction;\n  // export function maskedClass(mask: MaskedPattern): typeof MaskedPattern;\n  // export function maskedClass(mask: MaskedDynamic): typeof MaskedDynamic;\n  // export function maskedClass(mask: Masked): typeof Masked;\n  // export function maskedClass(mask: typeof Masked): typeof Masked;\n  // export function maskedClass(mask: typeof MaskedDate): typeof MaskedDate;\n  // export function maskedClass(mask: typeof MaskedNumber): typeof MaskedNumber;\n  // export function maskedClass(mask: typeof MaskedEnum): typeof MaskedEnum;\n  // export function maskedClass(mask: typeof MaskedRange): typeof MaskedRange;\n  // export function maskedClass(mask: typeof MaskedRegExp): typeof MaskedRegExp;\n  // export function maskedClass(mask: typeof MaskedFunction): typeof MaskedFunction;\n  // export function maskedClass(mask: typeof MaskedPattern): typeof MaskedPattern;\n  // export function maskedClass(mask: typeof MaskedDynamic): typeof MaskedDynamic;\n  // export function maskedClass<Mask extends typeof Masked> (mask: Mask): Mask;\n  // export function maskedClass(mask: RegExp): typeof MaskedRegExp;\n  // export function maskedClass(mask: (value: string, ...args: any[]) => boolean): typeof MaskedFunction;\n\n  /** Get Masked class by mask type */\n  function maskedClass(mask) /* TODO */{\n    if (mask == null) throw new Error('mask property should be defined');\n    if (mask instanceof RegExp) return IMask.MaskedRegExp;\n    if (isString(mask)) return IMask.MaskedPattern;\n    if (mask === Date) return IMask.MaskedDate;\n    if (mask === Number) return IMask.MaskedNumber;\n    if (Array.isArray(mask) || mask === Array) return IMask.MaskedDynamic;\n    if (IMask.Masked && mask.prototype instanceof IMask.Masked) return mask;\n    if (IMask.Masked && mask instanceof IMask.Masked) return mask.constructor;\n    if (mask instanceof Function) return IMask.MaskedFunction;\n    console.warn('Mask not found for mask', mask); // eslint-disable-line no-console\n    return IMask.Masked;\n  }\n  function normalizeOpts(opts) {\n    if (!opts) throw new Error('Options in not defined');\n    if (IMask.Masked) {\n      if (opts.prototype instanceof IMask.Masked) return {\n        mask: opts\n      };\n\n      /*\n        handle cases like:\n        1) opts = Masked\n        2) opts = { mask: Masked, ...instanceOpts }\n      */\n      const {\n        mask = undefined,\n        ...instanceOpts\n      } = opts instanceof IMask.Masked ? {\n        mask: opts\n      } : isObject(opts) && opts.mask instanceof IMask.Masked ? opts : {};\n      if (mask) {\n        const _mask = mask.mask;\n        return {\n          ...pick(mask, (_, k) => !k.startsWith('_')),\n          mask: mask.constructor,\n          _mask,\n          ...instanceOpts\n        };\n      }\n    }\n    if (!isObject(opts)) return {\n      mask: opts\n    };\n    return {\n      ...opts\n    };\n  }\n\n  // TODO can't use overloads here because of https://github.com/microsoft/TypeScript/issues/50754\n\n  // From masked\n  // export default function createMask<Opts extends Masked, ReturnMasked=Opts> (opts: Opts): ReturnMasked;\n  // // From masked class\n  // export default function createMask<Opts extends MaskedOptions<typeof Masked>, ReturnMasked extends Masked=InstanceType<Opts['mask']>> (opts: Opts): ReturnMasked;\n  // export default function createMask<Opts extends MaskedOptions<typeof MaskedDate>, ReturnMasked extends MaskedDate=MaskedDate<Opts['parent']>> (opts: Opts): ReturnMasked;\n  // export default function createMask<Opts extends MaskedOptions<typeof MaskedNumber>, ReturnMasked extends MaskedNumber=MaskedNumber<Opts['parent']>> (opts: Opts): ReturnMasked;\n  // export default function createMask<Opts extends MaskedOptions<typeof MaskedEnum>, ReturnMasked extends MaskedEnum=MaskedEnum<Opts['parent']>> (opts: Opts): ReturnMasked;\n  // export default function createMask<Opts extends MaskedOptions<typeof MaskedRange>, ReturnMasked extends MaskedRange=MaskedRange<Opts['parent']>> (opts: Opts): ReturnMasked;\n  // export default function createMask<Opts extends MaskedOptions<typeof MaskedRegExp>, ReturnMasked extends MaskedRegExp=MaskedRegExp<Opts['parent']>> (opts: Opts): ReturnMasked;\n  // export default function createMask<Opts extends MaskedOptions<typeof MaskedFunction>, ReturnMasked extends MaskedFunction=MaskedFunction<Opts['parent']>> (opts: Opts): ReturnMasked;\n  // export default function createMask<Opts extends MaskedOptions<typeof MaskedPattern>, ReturnMasked extends MaskedPattern=MaskedPattern<Opts['parent']>> (opts: Opts): ReturnMasked;\n  // export default function createMask<Opts extends MaskedOptions<typeof MaskedDynamic>, ReturnMasked extends MaskedDynamic=MaskedDynamic<Opts['parent']>> (opts: Opts): ReturnMasked;\n  // // From mask opts\n  // export default function createMask<Opts extends MaskedOptions<Masked>, ReturnMasked=Opts extends MaskedOptions<infer M> ? M : never> (opts: Opts): ReturnMasked;\n  // export default function createMask<Opts extends MaskedNumberOptions, ReturnMasked extends MaskedNumber=MaskedNumber<Opts['parent']>> (opts: Opts): ReturnMasked;\n  // export default function createMask<Opts extends MaskedDateFactoryOptions, ReturnMasked extends MaskedDate=MaskedDate<Opts['parent']>> (opts: Opts): ReturnMasked;\n  // export default function createMask<Opts extends MaskedEnumOptions, ReturnMasked extends MaskedEnum=MaskedEnum<Opts['parent']>> (opts: Opts): ReturnMasked;\n  // export default function createMask<Opts extends MaskedRangeOptions, ReturnMasked extends MaskedRange=MaskedRange<Opts['parent']>> (opts: Opts): ReturnMasked;\n  // export default function createMask<Opts extends MaskedPatternOptions, ReturnMasked extends MaskedPattern=MaskedPattern<Opts['parent']>> (opts: Opts): ReturnMasked;\n  // export default function createMask<Opts extends MaskedDynamicOptions, ReturnMasked extends MaskedDynamic=MaskedDynamic<Opts['parent']>> (opts: Opts): ReturnMasked;\n  // export default function createMask<Opts extends MaskedOptions<RegExp>, ReturnMasked extends MaskedRegExp=MaskedRegExp<Opts['parent']>> (opts: Opts): ReturnMasked;\n  // export default function createMask<Opts extends MaskedOptions<Function>, ReturnMasked extends MaskedFunction=MaskedFunction<Opts['parent']>> (opts: Opts): ReturnMasked;\n\n  /** Creates new {@link Masked} depending on mask type */\n  function createMask(opts) {\n    if (IMask.Masked && opts instanceof IMask.Masked) return opts;\n    const nOpts = normalizeOpts(opts);\n    const MaskedClass = maskedClass(nOpts.mask);\n    if (!MaskedClass) throw new Error(\"Masked class is not found for provided mask \" + nOpts.mask + \", appropriate module needs to be imported manually before creating mask.\");\n    if (nOpts.mask === MaskedClass) delete nOpts.mask;\n    if (nOpts._mask) {\n      nOpts.mask = nOpts._mask;\n      delete nOpts._mask;\n    }\n    return new MaskedClass(nOpts);\n  }\n  IMask.createMask = createMask;\n\n  /**  Generic element API to use with mask */\n  class MaskElement {\n    /** */\n\n    /** */\n\n    /** */\n\n    /** Safely returns selection start */\n    get selectionStart() {\n      let start;\n      try {\n        start = this._unsafeSelectionStart;\n      } catch {}\n      return start != null ? start : this.value.length;\n    }\n\n    /** Safely returns selection end */\n    get selectionEnd() {\n      let end;\n      try {\n        end = this._unsafeSelectionEnd;\n      } catch {}\n      return end != null ? end : this.value.length;\n    }\n\n    /** Safely sets element selection */\n    select(start, end) {\n      if (start == null || end == null || start === this.selectionStart && end === this.selectionEnd) return;\n      try {\n        this._unsafeSelect(start, end);\n      } catch {}\n    }\n\n    /** */\n    get isActive() {\n      return false;\n    }\n    /** */\n\n    /** */\n\n    /** */\n  }\n  IMask.MaskElement = MaskElement;\n\n  const KEY_Z = 90;\n  const KEY_Y = 89;\n\n  /** Bridge between HTMLElement and {@link Masked} */\n  class HTMLMaskElement extends MaskElement {\n    /** HTMLElement to use mask on */\n\n    constructor(input) {\n      super();\n      this.input = input;\n      this._onKeydown = this._onKeydown.bind(this);\n      this._onInput = this._onInput.bind(this);\n      this._onBeforeinput = this._onBeforeinput.bind(this);\n      this._onCompositionEnd = this._onCompositionEnd.bind(this);\n    }\n    get rootElement() {\n      var _this$input$getRootNo, _this$input$getRootNo2, _this$input;\n      return (_this$input$getRootNo = (_this$input$getRootNo2 = (_this$input = this.input).getRootNode) == null ? void 0 : _this$input$getRootNo2.call(_this$input)) != null ? _this$input$getRootNo : document;\n    }\n\n    /** Is element in focus */\n    get isActive() {\n      return this.input === this.rootElement.activeElement;\n    }\n\n    /** Binds HTMLElement events to mask internal events */\n    bindEvents(handlers) {\n      this.input.addEventListener('keydown', this._onKeydown);\n      this.input.addEventListener('input', this._onInput);\n      this.input.addEventListener('beforeinput', this._onBeforeinput);\n      this.input.addEventListener('compositionend', this._onCompositionEnd);\n      this.input.addEventListener('drop', handlers.drop);\n      this.input.addEventListener('click', handlers.click);\n      this.input.addEventListener('focus', handlers.focus);\n      this.input.addEventListener('blur', handlers.commit);\n      this._handlers = handlers;\n    }\n    _onKeydown(e) {\n      if (this._handlers.redo && (e.keyCode === KEY_Z && e.shiftKey && (e.metaKey || e.ctrlKey) || e.keyCode === KEY_Y && e.ctrlKey)) {\n        e.preventDefault();\n        return this._handlers.redo(e);\n      }\n      if (this._handlers.undo && e.keyCode === KEY_Z && (e.metaKey || e.ctrlKey)) {\n        e.preventDefault();\n        return this._handlers.undo(e);\n      }\n      if (!e.isComposing) this._handlers.selectionChange(e);\n    }\n    _onBeforeinput(e) {\n      if (e.inputType === 'historyUndo' && this._handlers.undo) {\n        e.preventDefault();\n        return this._handlers.undo(e);\n      }\n      if (e.inputType === 'historyRedo' && this._handlers.redo) {\n        e.preventDefault();\n        return this._handlers.redo(e);\n      }\n    }\n    _onCompositionEnd(e) {\n      this._handlers.input(e);\n    }\n    _onInput(e) {\n      if (!e.isComposing) this._handlers.input(e);\n    }\n\n    /** Unbinds HTMLElement events to mask internal events */\n    unbindEvents() {\n      this.input.removeEventListener('keydown', this._onKeydown);\n      this.input.removeEventListener('input', this._onInput);\n      this.input.removeEventListener('beforeinput', this._onBeforeinput);\n      this.input.removeEventListener('compositionend', this._onCompositionEnd);\n      this.input.removeEventListener('drop', this._handlers.drop);\n      this.input.removeEventListener('click', this._handlers.click);\n      this.input.removeEventListener('focus', this._handlers.focus);\n      this.input.removeEventListener('blur', this._handlers.commit);\n      this._handlers = {};\n    }\n  }\n  IMask.HTMLMaskElement = HTMLMaskElement;\n\n  /** Bridge between InputElement and {@link Masked} */\n  class HTMLInputMaskElement extends HTMLMaskElement {\n    /** InputElement to use mask on */\n\n    constructor(input) {\n      super(input);\n      this.input = input;\n    }\n\n    /** Returns InputElement selection start */\n    get _unsafeSelectionStart() {\n      return this.input.selectionStart != null ? this.input.selectionStart : this.value.length;\n    }\n\n    /** Returns InputElement selection end */\n    get _unsafeSelectionEnd() {\n      return this.input.selectionEnd;\n    }\n\n    /** Sets InputElement selection */\n    _unsafeSelect(start, end) {\n      this.input.setSelectionRange(start, end);\n    }\n    get value() {\n      return this.input.value;\n    }\n    set value(value) {\n      this.input.value = value;\n    }\n  }\n  IMask.HTMLMaskElement = HTMLMaskElement;\n\n  class HTMLContenteditableMaskElement extends HTMLMaskElement {\n    /** Returns HTMLElement selection start */\n    get _unsafeSelectionStart() {\n      const root = this.rootElement;\n      const selection = root.getSelection && root.getSelection();\n      const anchorOffset = selection && selection.anchorOffset;\n      const focusOffset = selection && selection.focusOffset;\n      if (focusOffset == null || anchorOffset == null || anchorOffset < focusOffset) {\n        return anchorOffset;\n      }\n      return focusOffset;\n    }\n\n    /** Returns HTMLElement selection end */\n    get _unsafeSelectionEnd() {\n      const root = this.rootElement;\n      const selection = root.getSelection && root.getSelection();\n      const anchorOffset = selection && selection.anchorOffset;\n      const focusOffset = selection && selection.focusOffset;\n      if (focusOffset == null || anchorOffset == null || anchorOffset > focusOffset) {\n        return anchorOffset;\n      }\n      return focusOffset;\n    }\n\n    /** Sets HTMLElement selection */\n    _unsafeSelect(start, end) {\n      if (!this.rootElement.createRange) return;\n      const range = this.rootElement.createRange();\n      range.setStart(this.input.firstChild || this.input, start);\n      range.setEnd(this.input.lastChild || this.input, end);\n      const root = this.rootElement;\n      const selection = root.getSelection && root.getSelection();\n      if (selection) {\n        selection.removeAllRanges();\n        selection.addRange(range);\n      }\n    }\n\n    /** HTMLElement value */\n    get value() {\n      return this.input.textContent || '';\n    }\n    set value(value) {\n      this.input.textContent = value;\n    }\n  }\n  IMask.HTMLContenteditableMaskElement = HTMLContenteditableMaskElement;\n\n  class InputHistory {\n    constructor() {\n      this.states = [];\n      this.currentIndex = 0;\n    }\n    get currentState() {\n      return this.states[this.currentIndex];\n    }\n    get isEmpty() {\n      return this.states.length === 0;\n    }\n    push(state) {\n      // if current index points before the last element then remove the future\n      if (this.currentIndex < this.states.length - 1) this.states.length = this.currentIndex + 1;\n      this.states.push(state);\n      if (this.states.length > InputHistory.MAX_LENGTH) this.states.shift();\n      this.currentIndex = this.states.length - 1;\n    }\n    go(steps) {\n      this.currentIndex = Math.min(Math.max(this.currentIndex + steps, 0), this.states.length - 1);\n      return this.currentState;\n    }\n    undo() {\n      return this.go(-1);\n    }\n    redo() {\n      return this.go(+1);\n    }\n    clear() {\n      this.states.length = 0;\n      this.currentIndex = 0;\n    }\n  }\n  InputHistory.MAX_LENGTH = 100;\n\n  /** Listens to element events and controls changes between element and {@link Masked} */\n  class InputMask {\n    /**\n      View element\n    */\n\n    /** Internal {@link Masked} model */\n\n    constructor(el, opts) {\n      this.el = el instanceof MaskElement ? el : el.isContentEditable && el.tagName !== 'INPUT' && el.tagName !== 'TEXTAREA' ? new HTMLContenteditableMaskElement(el) : new HTMLInputMaskElement(el);\n      this.masked = createMask(opts);\n      this._listeners = {};\n      this._value = '';\n      this._unmaskedValue = '';\n      this._rawInputValue = '';\n      this.history = new InputHistory();\n      this._saveSelection = this._saveSelection.bind(this);\n      this._onInput = this._onInput.bind(this);\n      this._onChange = this._onChange.bind(this);\n      this._onDrop = this._onDrop.bind(this);\n      this._onFocus = this._onFocus.bind(this);\n      this._onClick = this._onClick.bind(this);\n      this._onUndo = this._onUndo.bind(this);\n      this._onRedo = this._onRedo.bind(this);\n      this.alignCursor = this.alignCursor.bind(this);\n      this.alignCursorFriendly = this.alignCursorFriendly.bind(this);\n      this._bindEvents();\n\n      // refresh\n      this.updateValue();\n      this._onChange();\n    }\n    maskEquals(mask) {\n      var _this$masked;\n      return mask == null || ((_this$masked = this.masked) == null ? void 0 : _this$masked.maskEquals(mask));\n    }\n\n    /** Masked */\n    get mask() {\n      return this.masked.mask;\n    }\n    set mask(mask) {\n      if (this.maskEquals(mask)) return;\n      if (!(mask instanceof IMask.Masked) && this.masked.constructor === maskedClass(mask)) {\n        // TODO \"any\" no idea\n        this.masked.updateOptions({\n          mask\n        });\n        return;\n      }\n      const masked = mask instanceof IMask.Masked ? mask : createMask({\n        mask\n      });\n      masked.unmaskedValue = this.masked.unmaskedValue;\n      this.masked = masked;\n    }\n\n    /** Raw value */\n    get value() {\n      return this._value;\n    }\n    set value(str) {\n      if (this.value === str) return;\n      this.masked.value = str;\n      this.updateControl('auto');\n    }\n\n    /** Unmasked value */\n    get unmaskedValue() {\n      return this._unmaskedValue;\n    }\n    set unmaskedValue(str) {\n      if (this.unmaskedValue === str) return;\n      this.masked.unmaskedValue = str;\n      this.updateControl('auto');\n    }\n\n    /** Raw input value */\n    get rawInputValue() {\n      return this._rawInputValue;\n    }\n    set rawInputValue(str) {\n      if (this.rawInputValue === str) return;\n      this.masked.rawInputValue = str;\n      this.updateControl();\n      this.alignCursor();\n    }\n\n    /** Typed unmasked value */\n    get typedValue() {\n      return this.masked.typedValue;\n    }\n    set typedValue(val) {\n      if (this.masked.typedValueEquals(val)) return;\n      this.masked.typedValue = val;\n      this.updateControl('auto');\n    }\n\n    /** Display value */\n    get displayValue() {\n      return this.masked.displayValue;\n    }\n\n    /** Starts listening to element events */\n    _bindEvents() {\n      this.el.bindEvents({\n        selectionChange: this._saveSelection,\n        input: this._onInput,\n        drop: this._onDrop,\n        click: this._onClick,\n        focus: this._onFocus,\n        commit: this._onChange,\n        undo: this._onUndo,\n        redo: this._onRedo\n      });\n    }\n\n    /** Stops listening to element events */\n    _unbindEvents() {\n      if (this.el) this.el.unbindEvents();\n    }\n\n    /** Fires custom event */\n    _fireEvent(ev, e) {\n      const listeners = this._listeners[ev];\n      if (!listeners) return;\n      listeners.forEach(l => l(e));\n    }\n\n    /** Current selection start */\n    get selectionStart() {\n      return this._cursorChanging ? this._changingCursorPos : this.el.selectionStart;\n    }\n\n    /** Current cursor position */\n    get cursorPos() {\n      return this._cursorChanging ? this._changingCursorPos : this.el.selectionEnd;\n    }\n    set cursorPos(pos) {\n      if (!this.el || !this.el.isActive) return;\n      this.el.select(pos, pos);\n      this._saveSelection();\n    }\n\n    /** Stores current selection */\n    _saveSelection( /* ev */\n    ) {\n      if (this.displayValue !== this.el.value) {\n        console.warn('Element value was changed outside of mask. Syncronize mask using `mask.updateValue()` to work properly.'); // eslint-disable-line no-console\n      }\n      this._selection = {\n        start: this.selectionStart,\n        end: this.cursorPos\n      };\n    }\n\n    /** Syncronizes model value from view */\n    updateValue() {\n      this.masked.value = this.el.value;\n      this._value = this.masked.value;\n      this._unmaskedValue = this.masked.unmaskedValue;\n      this._rawInputValue = this.masked.rawInputValue;\n    }\n\n    /** Syncronizes view from model value, fires change events */\n    updateControl(cursorPos) {\n      const newUnmaskedValue = this.masked.unmaskedValue;\n      const newValue = this.masked.value;\n      const newRawInputValue = this.masked.rawInputValue;\n      const newDisplayValue = this.displayValue;\n      const isChanged = this.unmaskedValue !== newUnmaskedValue || this.value !== newValue || this._rawInputValue !== newRawInputValue;\n      this._unmaskedValue = newUnmaskedValue;\n      this._value = newValue;\n      this._rawInputValue = newRawInputValue;\n      if (this.el.value !== newDisplayValue) this.el.value = newDisplayValue;\n      if (cursorPos === 'auto') this.alignCursor();else if (cursorPos != null) this.cursorPos = cursorPos;\n      if (isChanged) this._fireChangeEvents();\n      if (!this._historyChanging && (isChanged || this.history.isEmpty)) this.history.push({\n        unmaskedValue: newUnmaskedValue,\n        selection: {\n          start: this.selectionStart,\n          end: this.cursorPos\n        }\n      });\n    }\n\n    /** Updates options with deep equal check, recreates {@link Masked} model if mask type changes */\n    updateOptions(opts) {\n      const {\n        mask,\n        ...restOpts\n      } = opts; // TODO types, yes, mask is optional\n\n      const updateMask = !this.maskEquals(mask);\n      const updateOpts = this.masked.optionsIsChanged(restOpts);\n      if (updateMask) this.mask = mask;\n      if (updateOpts) this.masked.updateOptions(restOpts); // TODO\n\n      if (updateMask || updateOpts) this.updateControl();\n    }\n\n    /** Updates cursor */\n    updateCursor(cursorPos) {\n      if (cursorPos == null) return;\n      this.cursorPos = cursorPos;\n\n      // also queue change cursor for mobile browsers\n      this._delayUpdateCursor(cursorPos);\n    }\n\n    /** Delays cursor update to support mobile browsers */\n    _delayUpdateCursor(cursorPos) {\n      this._abortUpdateCursor();\n      this._changingCursorPos = cursorPos;\n      this._cursorChanging = setTimeout(() => {\n        if (!this.el) return; // if was destroyed\n        this.cursorPos = this._changingCursorPos;\n        this._abortUpdateCursor();\n      }, 10);\n    }\n\n    /** Fires custom events */\n    _fireChangeEvents() {\n      this._fireEvent('accept', this._inputEvent);\n      if (this.masked.isComplete) this._fireEvent('complete', this._inputEvent);\n    }\n\n    /** Aborts delayed cursor update */\n    _abortUpdateCursor() {\n      if (this._cursorChanging) {\n        clearTimeout(this._cursorChanging);\n        delete this._cursorChanging;\n      }\n    }\n\n    /** Aligns cursor to nearest available position */\n    alignCursor() {\n      this.cursorPos = this.masked.nearestInputPos(this.masked.nearestInputPos(this.cursorPos, DIRECTION.LEFT));\n    }\n\n    /** Aligns cursor only if selection is empty */\n    alignCursorFriendly() {\n      if (this.selectionStart !== this.cursorPos) return; // skip if range is selected\n      this.alignCursor();\n    }\n\n    /** Adds listener on custom event */\n    on(ev, handler) {\n      if (!this._listeners[ev]) this._listeners[ev] = [];\n      this._listeners[ev].push(handler);\n      return this;\n    }\n\n    /** Removes custom event listener */\n    off(ev, handler) {\n      if (!this._listeners[ev]) return this;\n      if (!handler) {\n        delete this._listeners[ev];\n        return this;\n      }\n      const hIndex = this._listeners[ev].indexOf(handler);\n      if (hIndex >= 0) this._listeners[ev].splice(hIndex, 1);\n      return this;\n    }\n\n    /** Handles view input event */\n    _onInput(e) {\n      this._inputEvent = e;\n      this._abortUpdateCursor();\n      const details = new ActionDetails({\n        // new state\n        value: this.el.value,\n        cursorPos: this.cursorPos,\n        // old state\n        oldValue: this.displayValue,\n        oldSelection: this._selection\n      });\n      const oldRawValue = this.masked.rawInputValue;\n      const offset = this.masked.splice(details.startChangePos, details.removed.length, details.inserted, details.removeDirection, {\n        input: true,\n        raw: true\n      }).offset;\n\n      // force align in remove direction only if no input chars were removed\n      // otherwise we still need to align with NONE (to get out from fixed symbols for instance)\n      const removeDirection = oldRawValue === this.masked.rawInputValue ? details.removeDirection : DIRECTION.NONE;\n      let cursorPos = this.masked.nearestInputPos(details.startChangePos + offset, removeDirection);\n      if (removeDirection !== DIRECTION.NONE) cursorPos = this.masked.nearestInputPos(cursorPos, DIRECTION.NONE);\n      this.updateControl(cursorPos);\n      delete this._inputEvent;\n    }\n\n    /** Handles view change event and commits model value */\n    _onChange() {\n      if (this.displayValue !== this.el.value) this.updateValue();\n      this.masked.doCommit();\n      this.updateControl();\n      this._saveSelection();\n    }\n\n    /** Handles view drop event, prevents by default */\n    _onDrop(ev) {\n      ev.preventDefault();\n      ev.stopPropagation();\n    }\n\n    /** Restore last selection on focus */\n    _onFocus(ev) {\n      this.alignCursorFriendly();\n    }\n\n    /** Restore last selection on focus */\n    _onClick(ev) {\n      this.alignCursorFriendly();\n    }\n    _onUndo() {\n      this._applyHistoryState(this.history.undo());\n    }\n    _onRedo() {\n      this._applyHistoryState(this.history.redo());\n    }\n    _applyHistoryState(state) {\n      if (!state) return;\n      this._historyChanging = true;\n      this.unmaskedValue = state.unmaskedValue;\n      this.el.select(state.selection.start, state.selection.end);\n      this._saveSelection();\n      this._historyChanging = false;\n    }\n\n    /** Unbind view events and removes element reference */\n    destroy() {\n      this._unbindEvents();\n      this._listeners.length = 0;\n      delete this.el;\n    }\n  }\n  IMask.InputMask = InputMask;\n\n  /** Provides details of changing model value */\n  class ChangeDetails {\n    /** Inserted symbols */\n\n    /** Additional offset if any changes occurred before tail */\n\n    /** Raw inserted is used by dynamic mask */\n\n    /** Can skip chars */\n\n    static normalize(prep) {\n      return Array.isArray(prep) ? prep : [prep, new ChangeDetails()];\n    }\n    constructor(details) {\n      Object.assign(this, {\n        inserted: '',\n        rawInserted: '',\n        tailShift: 0,\n        skip: false\n      }, details);\n    }\n\n    /** Aggregate changes */\n    aggregate(details) {\n      this.inserted += details.inserted;\n      this.rawInserted += details.rawInserted;\n      this.tailShift += details.tailShift;\n      this.skip = this.skip || details.skip;\n      return this;\n    }\n\n    /** Total offset considering all changes */\n    get offset() {\n      return this.tailShift + this.inserted.length;\n    }\n    get consumed() {\n      return Boolean(this.rawInserted) || this.skip;\n    }\n    equals(details) {\n      return this.inserted === details.inserted && this.tailShift === details.tailShift && this.rawInserted === details.rawInserted && this.skip === details.skip;\n    }\n  }\n  IMask.ChangeDetails = ChangeDetails;\n\n  /** Provides details of continuous extracted tail */\n  class ContinuousTailDetails {\n    /** Tail value as string */\n\n    /** Tail start position */\n\n    /** Start position */\n\n    constructor(value, from, stop) {\n      if (value === void 0) {\n        value = '';\n      }\n      if (from === void 0) {\n        from = 0;\n      }\n      this.value = value;\n      this.from = from;\n      this.stop = stop;\n    }\n    toString() {\n      return this.value;\n    }\n    extend(tail) {\n      this.value += String(tail);\n    }\n    appendTo(masked) {\n      return masked.append(this.toString(), {\n        tail: true\n      }).aggregate(masked._appendPlaceholder());\n    }\n    get state() {\n      return {\n        value: this.value,\n        from: this.from,\n        stop: this.stop\n      };\n    }\n    set state(state) {\n      Object.assign(this, state);\n    }\n    unshift(beforePos) {\n      if (!this.value.length || beforePos != null && this.from >= beforePos) return '';\n      const shiftChar = this.value[0];\n      this.value = this.value.slice(1);\n      return shiftChar;\n    }\n    shift() {\n      if (!this.value.length) return '';\n      const shiftChar = this.value[this.value.length - 1];\n      this.value = this.value.slice(0, -1);\n      return shiftChar;\n    }\n  }\n\n  /** Append flags */\n\n  /** Extract flags */\n\n  // see https://github.com/microsoft/TypeScript/issues/6223\n\n  /** Provides common masking stuff */\n  class Masked {\n    /** */\n\n    /** */\n\n    /** Transforms value before mask processing */\n\n    /** Transforms each char before mask processing */\n\n    /** Validates if value is acceptable */\n\n    /** Does additional processing at the end of editing */\n\n    /** Format typed value to string */\n\n    /** Parse string to get typed value */\n\n    /** Enable characters overwriting */\n\n    /** */\n\n    /** */\n\n    /** */\n\n    /** */\n\n    constructor(opts) {\n      this._value = '';\n      this._update({\n        ...Masked.DEFAULTS,\n        ...opts\n      });\n      this._initialized = true;\n    }\n\n    /** Sets and applies new options */\n    updateOptions(opts) {\n      if (!this.optionsIsChanged(opts)) return;\n      this.withValueRefresh(this._update.bind(this, opts));\n    }\n\n    /** Sets new options */\n    _update(opts) {\n      Object.assign(this, opts);\n    }\n\n    /** Mask state */\n    get state() {\n      return {\n        _value: this.value,\n        _rawInputValue: this.rawInputValue\n      };\n    }\n    set state(state) {\n      this._value = state._value;\n    }\n\n    /** Resets value */\n    reset() {\n      this._value = '';\n    }\n    get value() {\n      return this._value;\n    }\n    set value(value) {\n      this.resolve(value, {\n        input: true\n      });\n    }\n\n    /** Resolve new value */\n    resolve(value, flags) {\n      if (flags === void 0) {\n        flags = {\n          input: true\n        };\n      }\n      this.reset();\n      this.append(value, flags, '');\n      this.doCommit();\n    }\n    get unmaskedValue() {\n      return this.value;\n    }\n    set unmaskedValue(value) {\n      this.resolve(value, {});\n    }\n    get typedValue() {\n      return this.parse ? this.parse(this.value, this) : this.unmaskedValue;\n    }\n    set typedValue(value) {\n      if (this.format) {\n        this.value = this.format(value, this);\n      } else {\n        this.unmaskedValue = String(value);\n      }\n    }\n\n    /** Value that includes raw user input */\n    get rawInputValue() {\n      return this.extractInput(0, this.displayValue.length, {\n        raw: true\n      });\n    }\n    set rawInputValue(value) {\n      this.resolve(value, {\n        raw: true\n      });\n    }\n    get displayValue() {\n      return this.value;\n    }\n    get isComplete() {\n      return true;\n    }\n    get isFilled() {\n      return this.isComplete;\n    }\n\n    /** Finds nearest input position in direction */\n    nearestInputPos(cursorPos, direction) {\n      return cursorPos;\n    }\n    totalInputPositions(fromPos, toPos) {\n      if (fromPos === void 0) {\n        fromPos = 0;\n      }\n      if (toPos === void 0) {\n        toPos = this.displayValue.length;\n      }\n      return Math.min(this.displayValue.length, toPos - fromPos);\n    }\n\n    /** Extracts value in range considering flags */\n    extractInput(fromPos, toPos, flags) {\n      if (fromPos === void 0) {\n        fromPos = 0;\n      }\n      if (toPos === void 0) {\n        toPos = this.displayValue.length;\n      }\n      return this.displayValue.slice(fromPos, toPos);\n    }\n\n    /** Extracts tail in range */\n    extractTail(fromPos, toPos) {\n      if (fromPos === void 0) {\n        fromPos = 0;\n      }\n      if (toPos === void 0) {\n        toPos = this.displayValue.length;\n      }\n      return new ContinuousTailDetails(this.extractInput(fromPos, toPos), fromPos);\n    }\n\n    /** Appends tail */\n    appendTail(tail) {\n      if (isString(tail)) tail = new ContinuousTailDetails(String(tail));\n      return tail.appendTo(this);\n    }\n\n    /** Appends char */\n    _appendCharRaw(ch, flags) {\n      if (!ch) return new ChangeDetails();\n      this._value += ch;\n      return new ChangeDetails({\n        inserted: ch,\n        rawInserted: ch\n      });\n    }\n\n    /** Appends char */\n    _appendChar(ch, flags, checkTail) {\n      if (flags === void 0) {\n        flags = {};\n      }\n      const consistentState = this.state;\n      let details;\n      [ch, details] = this.doPrepareChar(ch, flags);\n      if (ch) {\n        details = details.aggregate(this._appendCharRaw(ch, flags));\n\n        // TODO handle `skip`?\n\n        // try `autofix` lookahead\n        if (!details.rawInserted && this.autofix === 'pad') {\n          const noFixState = this.state;\n          this.state = consistentState;\n          let fixDetails = this.pad(flags);\n          const chDetails = this._appendCharRaw(ch, flags);\n          fixDetails = fixDetails.aggregate(chDetails);\n\n          // if fix was applied or\n          // if details are equal use skip restoring state optimization\n          if (chDetails.rawInserted || fixDetails.equals(details)) {\n            details = fixDetails;\n          } else {\n            this.state = noFixState;\n          }\n        }\n      }\n      if (details.inserted) {\n        let consistentTail;\n        let appended = this.doValidate(flags) !== false;\n        if (appended && checkTail != null) {\n          // validation ok, check tail\n          const beforeTailState = this.state;\n          if (this.overwrite === true) {\n            consistentTail = checkTail.state;\n            for (let i = 0; i < details.rawInserted.length; ++i) {\n              checkTail.unshift(this.displayValue.length - details.tailShift);\n            }\n          }\n          let tailDetails = this.appendTail(checkTail);\n          appended = tailDetails.rawInserted.length === checkTail.toString().length;\n\n          // not ok, try shift\n          if (!(appended && tailDetails.inserted) && this.overwrite === 'shift') {\n            this.state = beforeTailState;\n            consistentTail = checkTail.state;\n            for (let i = 0; i < details.rawInserted.length; ++i) {\n              checkTail.shift();\n            }\n            tailDetails = this.appendTail(checkTail);\n            appended = tailDetails.rawInserted.length === checkTail.toString().length;\n          }\n\n          // if ok, rollback state after tail\n          if (appended && tailDetails.inserted) this.state = beforeTailState;\n        }\n\n        // revert all if something went wrong\n        if (!appended) {\n          details = new ChangeDetails();\n          this.state = consistentState;\n          if (checkTail && consistentTail) checkTail.state = consistentTail;\n        }\n      }\n      return details;\n    }\n\n    /** Appends optional placeholder at the end */\n    _appendPlaceholder() {\n      return new ChangeDetails();\n    }\n\n    /** Appends optional eager placeholder at the end */\n    _appendEager() {\n      return new ChangeDetails();\n    }\n\n    /** Appends symbols considering flags */\n    append(str, flags, tail) {\n      if (!isString(str)) throw new Error('value should be string');\n      const checkTail = isString(tail) ? new ContinuousTailDetails(String(tail)) : tail;\n      if (flags != null && flags.tail) flags._beforeTailState = this.state;\n      let details;\n      [str, details] = this.doPrepare(str, flags);\n      for (let ci = 0; ci < str.length; ++ci) {\n        const d = this._appendChar(str[ci], flags, checkTail);\n        if (!d.rawInserted && !this.doSkipInvalid(str[ci], flags, checkTail)) break;\n        details.aggregate(d);\n      }\n      if ((this.eager === true || this.eager === 'append') && flags != null && flags.input && str) {\n        details.aggregate(this._appendEager());\n      }\n\n      // append tail but aggregate only tailShift\n      if (checkTail != null) {\n        details.tailShift += this.appendTail(checkTail).tailShift;\n        // TODO it's a good idea to clear state after appending ends\n        // but it causes bugs when one append calls another (when dynamic dispatch set rawInputValue)\n        // this._resetBeforeTailState();\n      }\n      return details;\n    }\n    remove(fromPos, toPos) {\n      if (fromPos === void 0) {\n        fromPos = 0;\n      }\n      if (toPos === void 0) {\n        toPos = this.displayValue.length;\n      }\n      this._value = this.displayValue.slice(0, fromPos) + this.displayValue.slice(toPos);\n      return new ChangeDetails();\n    }\n\n    /** Calls function and reapplies current value */\n    withValueRefresh(fn) {\n      if (this._refreshing || !this._initialized) return fn();\n      this._refreshing = true;\n      const rawInput = this.rawInputValue;\n      const value = this.value;\n      const ret = fn();\n      this.rawInputValue = rawInput;\n      // append lost trailing chars at the end\n      if (this.value && this.value !== value && value.indexOf(this.value) === 0) {\n        this.append(value.slice(this.displayValue.length), {}, '');\n        this.doCommit();\n      }\n      delete this._refreshing;\n      return ret;\n    }\n    runIsolated(fn) {\n      if (this._isolated || !this._initialized) return fn(this);\n      this._isolated = true;\n      const state = this.state;\n      const ret = fn(this);\n      this.state = state;\n      delete this._isolated;\n      return ret;\n    }\n    doSkipInvalid(ch, flags, checkTail) {\n      return Boolean(this.skipInvalid);\n    }\n\n    /** Prepares string before mask processing */\n    doPrepare(str, flags) {\n      if (flags === void 0) {\n        flags = {};\n      }\n      return ChangeDetails.normalize(this.prepare ? this.prepare(str, this, flags) : str);\n    }\n\n    /** Prepares each char before mask processing */\n    doPrepareChar(str, flags) {\n      if (flags === void 0) {\n        flags = {};\n      }\n      return ChangeDetails.normalize(this.prepareChar ? this.prepareChar(str, this, flags) : str);\n    }\n\n    /** Validates if value is acceptable */\n    doValidate(flags) {\n      return (!this.validate || this.validate(this.value, this, flags)) && (!this.parent || this.parent.doValidate(flags));\n    }\n\n    /** Does additional processing at the end of editing */\n    doCommit() {\n      if (this.commit) this.commit(this.value, this);\n    }\n    splice(start, deleteCount, inserted, removeDirection, flags) {\n      if (inserted === void 0) {\n        inserted = '';\n      }\n      if (removeDirection === void 0) {\n        removeDirection = DIRECTION.NONE;\n      }\n      if (flags === void 0) {\n        flags = {\n          input: true\n        };\n      }\n      const tailPos = start + deleteCount;\n      const tail = this.extractTail(tailPos);\n      const eagerRemove = this.eager === true || this.eager === 'remove';\n      let oldRawValue;\n      if (eagerRemove) {\n        removeDirection = forceDirection(removeDirection);\n        oldRawValue = this.extractInput(0, tailPos, {\n          raw: true\n        });\n      }\n      let startChangePos = start;\n      const details = new ChangeDetails();\n\n      // if it is just deletion without insertion\n      if (removeDirection !== DIRECTION.NONE) {\n        startChangePos = this.nearestInputPos(start, deleteCount > 1 && start !== 0 && !eagerRemove ? DIRECTION.NONE : removeDirection);\n\n        // adjust tailShift if start was aligned\n        details.tailShift = startChangePos - start;\n      }\n      details.aggregate(this.remove(startChangePos));\n      if (eagerRemove && removeDirection !== DIRECTION.NONE && oldRawValue === this.rawInputValue) {\n        if (removeDirection === DIRECTION.FORCE_LEFT) {\n          let valLength;\n          while (oldRawValue === this.rawInputValue && (valLength = this.displayValue.length)) {\n            details.aggregate(new ChangeDetails({\n              tailShift: -1\n            })).aggregate(this.remove(valLength - 1));\n          }\n        } else if (removeDirection === DIRECTION.FORCE_RIGHT) {\n          tail.unshift();\n        }\n      }\n      return details.aggregate(this.append(inserted, flags, tail));\n    }\n    maskEquals(mask) {\n      return this.mask === mask;\n    }\n    optionsIsChanged(opts) {\n      return !objectIncludes(this, opts);\n    }\n    typedValueEquals(value) {\n      const tval = this.typedValue;\n      return value === tval || Masked.EMPTY_VALUES.includes(value) && Masked.EMPTY_VALUES.includes(tval) || (this.format ? this.format(value, this) === this.format(this.typedValue, this) : false);\n    }\n    pad(flags) {\n      return new ChangeDetails();\n    }\n  }\n  Masked.DEFAULTS = {\n    skipInvalid: true\n  };\n  Masked.EMPTY_VALUES = [undefined, null, ''];\n  IMask.Masked = Masked;\n\n  class ChunksTailDetails {\n    /** */\n\n    constructor(chunks, from) {\n      if (chunks === void 0) {\n        chunks = [];\n      }\n      if (from === void 0) {\n        from = 0;\n      }\n      this.chunks = chunks;\n      this.from = from;\n    }\n    toString() {\n      return this.chunks.map(String).join('');\n    }\n    extend(tailChunk) {\n      if (!String(tailChunk)) return;\n      tailChunk = isString(tailChunk) ? new ContinuousTailDetails(String(tailChunk)) : tailChunk;\n      const lastChunk = this.chunks[this.chunks.length - 1];\n      const extendLast = lastChunk && (\n      // if stops are same or tail has no stop\n      lastChunk.stop === tailChunk.stop || tailChunk.stop == null) &&\n      // if tail chunk goes just after last chunk\n      tailChunk.from === lastChunk.from + lastChunk.toString().length;\n      if (tailChunk instanceof ContinuousTailDetails) {\n        // check the ability to extend previous chunk\n        if (extendLast) {\n          // extend previous chunk\n          lastChunk.extend(tailChunk.toString());\n        } else {\n          // append new chunk\n          this.chunks.push(tailChunk);\n        }\n      } else if (tailChunk instanceof ChunksTailDetails) {\n        if (tailChunk.stop == null) {\n          // unwrap floating chunks to parent, keeping `from` pos\n          let firstTailChunk;\n          while (tailChunk.chunks.length && tailChunk.chunks[0].stop == null) {\n            firstTailChunk = tailChunk.chunks.shift(); // not possible to be `undefined` because length was checked above\n            firstTailChunk.from += tailChunk.from;\n            this.extend(firstTailChunk);\n          }\n        }\n\n        // if tail chunk still has value\n        if (tailChunk.toString()) {\n          // if chunks contains stops, then popup stop to container\n          tailChunk.stop = tailChunk.blockIndex;\n          this.chunks.push(tailChunk);\n        }\n      }\n    }\n    appendTo(masked) {\n      if (!(masked instanceof IMask.MaskedPattern)) {\n        const tail = new ContinuousTailDetails(this.toString());\n        return tail.appendTo(masked);\n      }\n      const details = new ChangeDetails();\n      for (let ci = 0; ci < this.chunks.length; ++ci) {\n        const chunk = this.chunks[ci];\n        const lastBlockIter = masked._mapPosToBlock(masked.displayValue.length);\n        const stop = chunk.stop;\n        let chunkBlock;\n        if (stop != null && (\n        // if block not found or stop is behind lastBlock\n        !lastBlockIter || lastBlockIter.index <= stop)) {\n          if (chunk instanceof ChunksTailDetails ||\n          // for continuous block also check if stop is exist\n          masked._stops.indexOf(stop) >= 0) {\n            details.aggregate(masked._appendPlaceholder(stop));\n          }\n          chunkBlock = chunk instanceof ChunksTailDetails && masked._blocks[stop];\n        }\n        if (chunkBlock) {\n          const tailDetails = chunkBlock.appendTail(chunk);\n          details.aggregate(tailDetails);\n\n          // get not inserted chars\n          const remainChars = chunk.toString().slice(tailDetails.rawInserted.length);\n          if (remainChars) details.aggregate(masked.append(remainChars, {\n            tail: true\n          }));\n        } else {\n          details.aggregate(masked.append(chunk.toString(), {\n            tail: true\n          }));\n        }\n      }\n      return details;\n    }\n    get state() {\n      return {\n        chunks: this.chunks.map(c => c.state),\n        from: this.from,\n        stop: this.stop,\n        blockIndex: this.blockIndex\n      };\n    }\n    set state(state) {\n      const {\n        chunks,\n        ...props\n      } = state;\n      Object.assign(this, props);\n      this.chunks = chunks.map(cstate => {\n        const chunk = \"chunks\" in cstate ? new ChunksTailDetails() : new ContinuousTailDetails();\n        chunk.state = cstate;\n        return chunk;\n      });\n    }\n    unshift(beforePos) {\n      if (!this.chunks.length || beforePos != null && this.from >= beforePos) return '';\n      const chunkShiftPos = beforePos != null ? beforePos - this.from : beforePos;\n      let ci = 0;\n      while (ci < this.chunks.length) {\n        const chunk = this.chunks[ci];\n        const shiftChar = chunk.unshift(chunkShiftPos);\n        if (chunk.toString()) {\n          // chunk still contains value\n          // but not shifted - means no more available chars to shift\n          if (!shiftChar) break;\n          ++ci;\n        } else {\n          // clean if chunk has no value\n          this.chunks.splice(ci, 1);\n        }\n        if (shiftChar) return shiftChar;\n      }\n      return '';\n    }\n    shift() {\n      if (!this.chunks.length) return '';\n      let ci = this.chunks.length - 1;\n      while (0 <= ci) {\n        const chunk = this.chunks[ci];\n        const shiftChar = chunk.shift();\n        if (chunk.toString()) {\n          // chunk still contains value\n          // but not shifted - means no more available chars to shift\n          if (!shiftChar) break;\n          --ci;\n        } else {\n          // clean if chunk has no value\n          this.chunks.splice(ci, 1);\n        }\n        if (shiftChar) return shiftChar;\n      }\n      return '';\n    }\n  }\n\n  class PatternCursor {\n    constructor(masked, pos) {\n      this.masked = masked;\n      this._log = [];\n      const {\n        offset,\n        index\n      } = masked._mapPosToBlock(pos) || (pos < 0 ?\n      // first\n      {\n        index: 0,\n        offset: 0\n      } :\n      // last\n      {\n        index: this.masked._blocks.length,\n        offset: 0\n      });\n      this.offset = offset;\n      this.index = index;\n      this.ok = false;\n    }\n    get block() {\n      return this.masked._blocks[this.index];\n    }\n    get pos() {\n      return this.masked._blockStartPos(this.index) + this.offset;\n    }\n    get state() {\n      return {\n        index: this.index,\n        offset: this.offset,\n        ok: this.ok\n      };\n    }\n    set state(s) {\n      Object.assign(this, s);\n    }\n    pushState() {\n      this._log.push(this.state);\n    }\n    popState() {\n      const s = this._log.pop();\n      if (s) this.state = s;\n      return s;\n    }\n    bindBlock() {\n      if (this.block) return;\n      if (this.index < 0) {\n        this.index = 0;\n        this.offset = 0;\n      }\n      if (this.index >= this.masked._blocks.length) {\n        this.index = this.masked._blocks.length - 1;\n        this.offset = this.block.displayValue.length; // TODO this is stupid type error, `block` depends on index that was changed above\n      }\n    }\n    _pushLeft(fn) {\n      this.pushState();\n      for (this.bindBlock(); 0 <= this.index; --this.index, this.offset = ((_this$block = this.block) == null ? void 0 : _this$block.displayValue.length) || 0) {\n        var _this$block;\n        if (fn()) return this.ok = true;\n      }\n      return this.ok = false;\n    }\n    _pushRight(fn) {\n      this.pushState();\n      for (this.bindBlock(); this.index < this.masked._blocks.length; ++this.index, this.offset = 0) {\n        if (fn()) return this.ok = true;\n      }\n      return this.ok = false;\n    }\n    pushLeftBeforeFilled() {\n      return this._pushLeft(() => {\n        if (this.block.isFixed || !this.block.value) return;\n        this.offset = this.block.nearestInputPos(this.offset, DIRECTION.FORCE_LEFT);\n        if (this.offset !== 0) return true;\n      });\n    }\n    pushLeftBeforeInput() {\n      // cases:\n      // filled input: 00|\n      // optional empty input: 00[]|\n      // nested block: XX<[]>|\n      return this._pushLeft(() => {\n        if (this.block.isFixed) return;\n        this.offset = this.block.nearestInputPos(this.offset, DIRECTION.LEFT);\n        return true;\n      });\n    }\n    pushLeftBeforeRequired() {\n      return this._pushLeft(() => {\n        if (this.block.isFixed || this.block.isOptional && !this.block.value) return;\n        this.offset = this.block.nearestInputPos(this.offset, DIRECTION.LEFT);\n        return true;\n      });\n    }\n    pushRightBeforeFilled() {\n      return this._pushRight(() => {\n        if (this.block.isFixed || !this.block.value) return;\n        this.offset = this.block.nearestInputPos(this.offset, DIRECTION.FORCE_RIGHT);\n        if (this.offset !== this.block.value.length) return true;\n      });\n    }\n    pushRightBeforeInput() {\n      return this._pushRight(() => {\n        if (this.block.isFixed) return;\n\n        // const o = this.offset;\n        this.offset = this.block.nearestInputPos(this.offset, DIRECTION.NONE);\n        // HACK cases like (STILL DOES NOT WORK FOR NESTED)\n        // aa|X\n        // aa<X|[]>X_    - this will not work\n        // if (o && o === this.offset && this.block instanceof PatternInputDefinition) continue;\n        return true;\n      });\n    }\n    pushRightBeforeRequired() {\n      return this._pushRight(() => {\n        if (this.block.isFixed || this.block.isOptional && !this.block.value) return;\n\n        // TODO check |[*]XX_\n        this.offset = this.block.nearestInputPos(this.offset, DIRECTION.NONE);\n        return true;\n      });\n    }\n  }\n\n  class PatternFixedDefinition {\n    /** */\n\n    /** */\n\n    /** */\n\n    /** */\n\n    /** */\n\n    /** */\n\n    constructor(opts) {\n      Object.assign(this, opts);\n      this._value = '';\n      this.isFixed = true;\n    }\n    get value() {\n      return this._value;\n    }\n    get unmaskedValue() {\n      return this.isUnmasking ? this.value : '';\n    }\n    get rawInputValue() {\n      return this._isRawInput ? this.value : '';\n    }\n    get displayValue() {\n      return this.value;\n    }\n    reset() {\n      this._isRawInput = false;\n      this._value = '';\n    }\n    remove(fromPos, toPos) {\n      if (fromPos === void 0) {\n        fromPos = 0;\n      }\n      if (toPos === void 0) {\n        toPos = this._value.length;\n      }\n      this._value = this._value.slice(0, fromPos) + this._value.slice(toPos);\n      if (!this._value) this._isRawInput = false;\n      return new ChangeDetails();\n    }\n    nearestInputPos(cursorPos, direction) {\n      if (direction === void 0) {\n        direction = DIRECTION.NONE;\n      }\n      const minPos = 0;\n      const maxPos = this._value.length;\n      switch (direction) {\n        case DIRECTION.LEFT:\n        case DIRECTION.FORCE_LEFT:\n          return minPos;\n        case DIRECTION.NONE:\n        case DIRECTION.RIGHT:\n        case DIRECTION.FORCE_RIGHT:\n        default:\n          return maxPos;\n      }\n    }\n    totalInputPositions(fromPos, toPos) {\n      if (fromPos === void 0) {\n        fromPos = 0;\n      }\n      if (toPos === void 0) {\n        toPos = this._value.length;\n      }\n      return this._isRawInput ? toPos - fromPos : 0;\n    }\n    extractInput(fromPos, toPos, flags) {\n      if (fromPos === void 0) {\n        fromPos = 0;\n      }\n      if (toPos === void 0) {\n        toPos = this._value.length;\n      }\n      if (flags === void 0) {\n        flags = {};\n      }\n      return flags.raw && this._isRawInput && this._value.slice(fromPos, toPos) || '';\n    }\n    get isComplete() {\n      return true;\n    }\n    get isFilled() {\n      return Boolean(this._value);\n    }\n    _appendChar(ch, flags) {\n      if (flags === void 0) {\n        flags = {};\n      }\n      if (this.isFilled) return new ChangeDetails();\n      const appendEager = this.eager === true || this.eager === 'append';\n      const appended = this.char === ch;\n      const isResolved = appended && (this.isUnmasking || flags.input || flags.raw) && (!flags.raw || !appendEager) && !flags.tail;\n      const details = new ChangeDetails({\n        inserted: this.char,\n        rawInserted: isResolved ? this.char : ''\n      });\n      this._value = this.char;\n      this._isRawInput = isResolved && (flags.raw || flags.input);\n      return details;\n    }\n    _appendEager() {\n      return this._appendChar(this.char, {\n        tail: true\n      });\n    }\n    _appendPlaceholder() {\n      const details = new ChangeDetails();\n      if (this.isFilled) return details;\n      this._value = details.inserted = this.char;\n      return details;\n    }\n    extractTail() {\n      return new ContinuousTailDetails('');\n    }\n    appendTail(tail) {\n      if (isString(tail)) tail = new ContinuousTailDetails(String(tail));\n      return tail.appendTo(this);\n    }\n    append(str, flags, tail) {\n      const details = this._appendChar(str[0], flags);\n      if (tail != null) {\n        details.tailShift += this.appendTail(tail).tailShift;\n      }\n      return details;\n    }\n    doCommit() {}\n    get state() {\n      return {\n        _value: this._value,\n        _rawInputValue: this.rawInputValue\n      };\n    }\n    set state(state) {\n      this._value = state._value;\n      this._isRawInput = Boolean(state._rawInputValue);\n    }\n    pad(flags) {\n      return this._appendPlaceholder();\n    }\n  }\n\n  class PatternInputDefinition {\n    /** */\n\n    /** */\n\n    /** */\n\n    /** */\n\n    /** */\n\n    /** */\n\n    /** */\n\n    /** */\n\n    constructor(opts) {\n      const {\n        parent,\n        isOptional,\n        placeholderChar,\n        displayChar,\n        lazy,\n        eager,\n        ...maskOpts\n      } = opts;\n      this.masked = createMask(maskOpts);\n      Object.assign(this, {\n        parent,\n        isOptional,\n        placeholderChar,\n        displayChar,\n        lazy,\n        eager\n      });\n    }\n    reset() {\n      this.isFilled = false;\n      this.masked.reset();\n    }\n    remove(fromPos, toPos) {\n      if (fromPos === void 0) {\n        fromPos = 0;\n      }\n      if (toPos === void 0) {\n        toPos = this.value.length;\n      }\n      if (fromPos === 0 && toPos >= 1) {\n        this.isFilled = false;\n        return this.masked.remove(fromPos, toPos);\n      }\n      return new ChangeDetails();\n    }\n    get value() {\n      return this.masked.value || (this.isFilled && !this.isOptional ? this.placeholderChar : '');\n    }\n    get unmaskedValue() {\n      return this.masked.unmaskedValue;\n    }\n    get rawInputValue() {\n      return this.masked.rawInputValue;\n    }\n    get displayValue() {\n      return this.masked.value && this.displayChar || this.value;\n    }\n    get isComplete() {\n      return Boolean(this.masked.value) || this.isOptional;\n    }\n    _appendChar(ch, flags) {\n      if (flags === void 0) {\n        flags = {};\n      }\n      if (this.isFilled) return new ChangeDetails();\n      const state = this.masked.state;\n      // simulate input\n      let details = this.masked._appendChar(ch, this.currentMaskFlags(flags));\n      if (details.inserted && this.doValidate(flags) === false) {\n        details = new ChangeDetails();\n        this.masked.state = state;\n      }\n      if (!details.inserted && !this.isOptional && !this.lazy && !flags.input) {\n        details.inserted = this.placeholderChar;\n      }\n      details.skip = !details.inserted && !this.isOptional;\n      this.isFilled = Boolean(details.inserted);\n      return details;\n    }\n    append(str, flags, tail) {\n      // TODO probably should be done via _appendChar\n      return this.masked.append(str, this.currentMaskFlags(flags), tail);\n    }\n    _appendPlaceholder() {\n      if (this.isFilled || this.isOptional) return new ChangeDetails();\n      this.isFilled = true;\n      return new ChangeDetails({\n        inserted: this.placeholderChar\n      });\n    }\n    _appendEager() {\n      return new ChangeDetails();\n    }\n    extractTail(fromPos, toPos) {\n      return this.masked.extractTail(fromPos, toPos);\n    }\n    appendTail(tail) {\n      return this.masked.appendTail(tail);\n    }\n    extractInput(fromPos, toPos, flags) {\n      if (fromPos === void 0) {\n        fromPos = 0;\n      }\n      if (toPos === void 0) {\n        toPos = this.value.length;\n      }\n      return this.masked.extractInput(fromPos, toPos, flags);\n    }\n    nearestInputPos(cursorPos, direction) {\n      if (direction === void 0) {\n        direction = DIRECTION.NONE;\n      }\n      const minPos = 0;\n      const maxPos = this.value.length;\n      const boundPos = Math.min(Math.max(cursorPos, minPos), maxPos);\n      switch (direction) {\n        case DIRECTION.LEFT:\n        case DIRECTION.FORCE_LEFT:\n          return this.isComplete ? boundPos : minPos;\n        case DIRECTION.RIGHT:\n        case DIRECTION.FORCE_RIGHT:\n          return this.isComplete ? boundPos : maxPos;\n        case DIRECTION.NONE:\n        default:\n          return boundPos;\n      }\n    }\n    totalInputPositions(fromPos, toPos) {\n      if (fromPos === void 0) {\n        fromPos = 0;\n      }\n      if (toPos === void 0) {\n        toPos = this.value.length;\n      }\n      return this.value.slice(fromPos, toPos).length;\n    }\n    doValidate(flags) {\n      return this.masked.doValidate(this.currentMaskFlags(flags)) && (!this.parent || this.parent.doValidate(this.currentMaskFlags(flags)));\n    }\n    doCommit() {\n      this.masked.doCommit();\n    }\n    get state() {\n      return {\n        _value: this.value,\n        _rawInputValue: this.rawInputValue,\n        masked: this.masked.state,\n        isFilled: this.isFilled\n      };\n    }\n    set state(state) {\n      this.masked.state = state.masked;\n      this.isFilled = state.isFilled;\n    }\n    currentMaskFlags(flags) {\n      var _flags$_beforeTailSta;\n      return {\n        ...flags,\n        _beforeTailState: (flags == null || (_flags$_beforeTailSta = flags._beforeTailState) == null ? void 0 : _flags$_beforeTailSta.masked) || (flags == null ? void 0 : flags._beforeTailState)\n      };\n    }\n    pad(flags) {\n      return new ChangeDetails();\n    }\n  }\n  PatternInputDefinition.DEFAULT_DEFINITIONS = {\n    '0': /\\d/,\n    'a': /[\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,\n    // http://stackoverflow.com/a/22075070\n    '*': /./\n  };\n\n  /** Masking by RegExp */\n  class MaskedRegExp extends Masked {\n    /** */\n\n    /** Enable characters overwriting */\n\n    /** */\n\n    /** */\n\n    /** */\n\n    updateOptions(opts) {\n      super.updateOptions(opts);\n    }\n    _update(opts) {\n      const mask = opts.mask;\n      if (mask) opts.validate = value => value.search(mask) >= 0;\n      super._update(opts);\n    }\n  }\n  IMask.MaskedRegExp = MaskedRegExp;\n\n  /** Pattern mask */\n  class MaskedPattern extends Masked {\n    /** */\n\n    /** */\n\n    /** Single char for empty input */\n\n    /** Single char for filled input */\n\n    /** Show placeholder only when needed */\n\n    /** Enable characters overwriting */\n\n    /** */\n\n    /** */\n\n    /** */\n\n    constructor(opts) {\n      super({\n        ...MaskedPattern.DEFAULTS,\n        ...opts,\n        definitions: Object.assign({}, PatternInputDefinition.DEFAULT_DEFINITIONS, opts == null ? void 0 : opts.definitions)\n      });\n    }\n    updateOptions(opts) {\n      super.updateOptions(opts);\n    }\n    _update(opts) {\n      opts.definitions = Object.assign({}, this.definitions, opts.definitions);\n      super._update(opts);\n      this._rebuildMask();\n    }\n    _rebuildMask() {\n      const defs = this.definitions;\n      this._blocks = [];\n      this.exposeBlock = undefined;\n      this._stops = [];\n      this._maskedBlocks = {};\n      const pattern = this.mask;\n      if (!pattern || !defs) return;\n      let unmaskingBlock = false;\n      let optionalBlock = false;\n      for (let i = 0; i < pattern.length; ++i) {\n        if (this.blocks) {\n          const p = pattern.slice(i);\n          const bNames = Object.keys(this.blocks).filter(bName => p.indexOf(bName) === 0);\n          // order by key length\n          bNames.sort((a, b) => b.length - a.length);\n          // use block name with max length\n          const bName = bNames[0];\n          if (bName) {\n            const {\n              expose,\n              repeat,\n              ...bOpts\n            } = normalizeOpts(this.blocks[bName]); // TODO type Opts<Arg & Extra>\n            const blockOpts = {\n              lazy: this.lazy,\n              eager: this.eager,\n              placeholderChar: this.placeholderChar,\n              displayChar: this.displayChar,\n              overwrite: this.overwrite,\n              autofix: this.autofix,\n              ...bOpts,\n              repeat,\n              parent: this\n            };\n            const maskedBlock = repeat != null ? new IMask.RepeatBlock(blockOpts /* TODO */) : createMask(blockOpts);\n            if (maskedBlock) {\n              this._blocks.push(maskedBlock);\n              if (expose) this.exposeBlock = maskedBlock;\n\n              // store block index\n              if (!this._maskedBlocks[bName]) this._maskedBlocks[bName] = [];\n              this._maskedBlocks[bName].push(this._blocks.length - 1);\n            }\n            i += bName.length - 1;\n            continue;\n          }\n        }\n        let char = pattern[i];\n        let isInput = (char in defs);\n        if (char === MaskedPattern.STOP_CHAR) {\n          this._stops.push(this._blocks.length);\n          continue;\n        }\n        if (char === '{' || char === '}') {\n          unmaskingBlock = !unmaskingBlock;\n          continue;\n        }\n        if (char === '[' || char === ']') {\n          optionalBlock = !optionalBlock;\n          continue;\n        }\n        if (char === MaskedPattern.ESCAPE_CHAR) {\n          ++i;\n          char = pattern[i];\n          if (!char) break;\n          isInput = false;\n        }\n        const def = isInput ? new PatternInputDefinition({\n          isOptional: optionalBlock,\n          lazy: this.lazy,\n          eager: this.eager,\n          placeholderChar: this.placeholderChar,\n          displayChar: this.displayChar,\n          ...normalizeOpts(defs[char]),\n          parent: this\n        }) : new PatternFixedDefinition({\n          char,\n          eager: this.eager,\n          isUnmasking: unmaskingBlock\n        });\n        this._blocks.push(def);\n      }\n    }\n    get state() {\n      return {\n        ...super.state,\n        _blocks: this._blocks.map(b => b.state)\n      };\n    }\n    set state(state) {\n      if (!state) {\n        this.reset();\n        return;\n      }\n      const {\n        _blocks,\n        ...maskedState\n      } = state;\n      this._blocks.forEach((b, bi) => b.state = _blocks[bi]);\n      super.state = maskedState;\n    }\n    reset() {\n      super.reset();\n      this._blocks.forEach(b => b.reset());\n    }\n    get isComplete() {\n      return this.exposeBlock ? this.exposeBlock.isComplete : this._blocks.every(b => b.isComplete);\n    }\n    get isFilled() {\n      return this._blocks.every(b => b.isFilled);\n    }\n    get isFixed() {\n      return this._blocks.every(b => b.isFixed);\n    }\n    get isOptional() {\n      return this._blocks.every(b => b.isOptional);\n    }\n    doCommit() {\n      this._blocks.forEach(b => b.doCommit());\n      super.doCommit();\n    }\n    get unmaskedValue() {\n      return this.exposeBlock ? this.exposeBlock.unmaskedValue : this._blocks.reduce((str, b) => str += b.unmaskedValue, '');\n    }\n    set unmaskedValue(unmaskedValue) {\n      if (this.exposeBlock) {\n        const tail = this.extractTail(this._blockStartPos(this._blocks.indexOf(this.exposeBlock)) + this.exposeBlock.displayValue.length);\n        this.exposeBlock.unmaskedValue = unmaskedValue;\n        this.appendTail(tail);\n        this.doCommit();\n      } else super.unmaskedValue = unmaskedValue;\n    }\n    get value() {\n      return this.exposeBlock ? this.exposeBlock.value :\n      // TODO return _value when not in change?\n      this._blocks.reduce((str, b) => str += b.value, '');\n    }\n    set value(value) {\n      if (this.exposeBlock) {\n        const tail = this.extractTail(this._blockStartPos(this._blocks.indexOf(this.exposeBlock)) + this.exposeBlock.displayValue.length);\n        this.exposeBlock.value = value;\n        this.appendTail(tail);\n        this.doCommit();\n      } else super.value = value;\n    }\n    get typedValue() {\n      return this.exposeBlock ? this.exposeBlock.typedValue : super.typedValue;\n    }\n    set typedValue(value) {\n      if (this.exposeBlock) {\n        const tail = this.extractTail(this._blockStartPos(this._blocks.indexOf(this.exposeBlock)) + this.exposeBlock.displayValue.length);\n        this.exposeBlock.typedValue = value;\n        this.appendTail(tail);\n        this.doCommit();\n      } else super.typedValue = value;\n    }\n    get displayValue() {\n      return this._blocks.reduce((str, b) => str += b.displayValue, '');\n    }\n    appendTail(tail) {\n      return super.appendTail(tail).aggregate(this._appendPlaceholder());\n    }\n    _appendEager() {\n      var _this$_mapPosToBlock;\n      const details = new ChangeDetails();\n      let startBlockIndex = (_this$_mapPosToBlock = this._mapPosToBlock(this.displayValue.length)) == null ? void 0 : _this$_mapPosToBlock.index;\n      if (startBlockIndex == null) return details;\n\n      // TODO test if it works for nested pattern masks\n      if (this._blocks[startBlockIndex].isFilled) ++startBlockIndex;\n      for (let bi = startBlockIndex; bi < this._blocks.length; ++bi) {\n        const d = this._blocks[bi]._appendEager();\n        if (!d.inserted) break;\n        details.aggregate(d);\n      }\n      return details;\n    }\n    _appendCharRaw(ch, flags) {\n      if (flags === void 0) {\n        flags = {};\n      }\n      const blockIter = this._mapPosToBlock(this.displayValue.length);\n      const details = new ChangeDetails();\n      if (!blockIter) return details;\n      for (let bi = blockIter.index, block; block = this._blocks[bi]; ++bi) {\n        var _flags$_beforeTailSta;\n        const blockDetails = block._appendChar(ch, {\n          ...flags,\n          _beforeTailState: (_flags$_beforeTailSta = flags._beforeTailState) == null || (_flags$_beforeTailSta = _flags$_beforeTailSta._blocks) == null ? void 0 : _flags$_beforeTailSta[bi]\n        });\n        details.aggregate(blockDetails);\n        if (blockDetails.consumed) break; // go next char\n      }\n      return details;\n    }\n    extractTail(fromPos, toPos) {\n      if (fromPos === void 0) {\n        fromPos = 0;\n      }\n      if (toPos === void 0) {\n        toPos = this.displayValue.length;\n      }\n      const chunkTail = new ChunksTailDetails();\n      if (fromPos === toPos) return chunkTail;\n      this._forEachBlocksInRange(fromPos, toPos, (b, bi, bFromPos, bToPos) => {\n        const blockChunk = b.extractTail(bFromPos, bToPos);\n        blockChunk.stop = this._findStopBefore(bi);\n        blockChunk.from = this._blockStartPos(bi);\n        if (blockChunk instanceof ChunksTailDetails) blockChunk.blockIndex = bi;\n        chunkTail.extend(blockChunk);\n      });\n      return chunkTail;\n    }\n    extractInput(fromPos, toPos, flags) {\n      if (fromPos === void 0) {\n        fromPos = 0;\n      }\n      if (toPos === void 0) {\n        toPos = this.displayValue.length;\n      }\n      if (flags === void 0) {\n        flags = {};\n      }\n      if (fromPos === toPos) return '';\n      let input = '';\n      this._forEachBlocksInRange(fromPos, toPos, (b, _, fromPos, toPos) => {\n        input += b.extractInput(fromPos, toPos, flags);\n      });\n      return input;\n    }\n    _findStopBefore(blockIndex) {\n      let stopBefore;\n      for (let si = 0; si < this._stops.length; ++si) {\n        const stop = this._stops[si];\n        if (stop <= blockIndex) stopBefore = stop;else break;\n      }\n      return stopBefore;\n    }\n\n    /** Appends placeholder depending on laziness */\n    _appendPlaceholder(toBlockIndex) {\n      const details = new ChangeDetails();\n      if (this.lazy && toBlockIndex == null) return details;\n      const startBlockIter = this._mapPosToBlock(this.displayValue.length);\n      if (!startBlockIter) return details;\n      const startBlockIndex = startBlockIter.index;\n      const endBlockIndex = toBlockIndex != null ? toBlockIndex : this._blocks.length;\n      this._blocks.slice(startBlockIndex, endBlockIndex).forEach(b => {\n        if (!b.lazy || toBlockIndex != null) {\n          var _blocks2;\n          details.aggregate(b._appendPlaceholder((_blocks2 = b._blocks) == null ? void 0 : _blocks2.length));\n        }\n      });\n      return details;\n    }\n\n    /** Finds block in pos */\n    _mapPosToBlock(pos) {\n      let accVal = '';\n      for (let bi = 0; bi < this._blocks.length; ++bi) {\n        const block = this._blocks[bi];\n        const blockStartPos = accVal.length;\n        accVal += block.displayValue;\n        if (pos <= accVal.length) {\n          return {\n            index: bi,\n            offset: pos - blockStartPos\n          };\n        }\n      }\n    }\n    _blockStartPos(blockIndex) {\n      return this._blocks.slice(0, blockIndex).reduce((pos, b) => pos += b.displayValue.length, 0);\n    }\n    _forEachBlocksInRange(fromPos, toPos, fn) {\n      if (toPos === void 0) {\n        toPos = this.displayValue.length;\n      }\n      const fromBlockIter = this._mapPosToBlock(fromPos);\n      if (fromBlockIter) {\n        const toBlockIter = this._mapPosToBlock(toPos);\n        // process first block\n        const isSameBlock = toBlockIter && fromBlockIter.index === toBlockIter.index;\n        const fromBlockStartPos = fromBlockIter.offset;\n        const fromBlockEndPos = toBlockIter && isSameBlock ? toBlockIter.offset : this._blocks[fromBlockIter.index].displayValue.length;\n        fn(this._blocks[fromBlockIter.index], fromBlockIter.index, fromBlockStartPos, fromBlockEndPos);\n        if (toBlockIter && !isSameBlock) {\n          // process intermediate blocks\n          for (let bi = fromBlockIter.index + 1; bi < toBlockIter.index; ++bi) {\n            fn(this._blocks[bi], bi, 0, this._blocks[bi].displayValue.length);\n          }\n\n          // process last block\n          fn(this._blocks[toBlockIter.index], toBlockIter.index, 0, toBlockIter.offset);\n        }\n      }\n    }\n    remove(fromPos, toPos) {\n      if (fromPos === void 0) {\n        fromPos = 0;\n      }\n      if (toPos === void 0) {\n        toPos = this.displayValue.length;\n      }\n      const removeDetails = super.remove(fromPos, toPos);\n      this._forEachBlocksInRange(fromPos, toPos, (b, _, bFromPos, bToPos) => {\n        removeDetails.aggregate(b.remove(bFromPos, bToPos));\n      });\n      return removeDetails;\n    }\n    nearestInputPos(cursorPos, direction) {\n      if (direction === void 0) {\n        direction = DIRECTION.NONE;\n      }\n      if (!this._blocks.length) return 0;\n      const cursor = new PatternCursor(this, cursorPos);\n      if (direction === DIRECTION.NONE) {\n        // -------------------------------------------------\n        // NONE should only go out from fixed to the right!\n        // -------------------------------------------------\n        if (cursor.pushRightBeforeInput()) return cursor.pos;\n        cursor.popState();\n        if (cursor.pushLeftBeforeInput()) return cursor.pos;\n        return this.displayValue.length;\n      }\n\n      // FORCE is only about a|* otherwise is 0\n      if (direction === DIRECTION.LEFT || direction === DIRECTION.FORCE_LEFT) {\n        // try to break fast when *|a\n        if (direction === DIRECTION.LEFT) {\n          cursor.pushRightBeforeFilled();\n          if (cursor.ok && cursor.pos === cursorPos) return cursorPos;\n          cursor.popState();\n        }\n\n        // forward flow\n        cursor.pushLeftBeforeInput();\n        cursor.pushLeftBeforeRequired();\n        cursor.pushLeftBeforeFilled();\n\n        // backward flow\n        if (direction === DIRECTION.LEFT) {\n          cursor.pushRightBeforeInput();\n          cursor.pushRightBeforeRequired();\n          if (cursor.ok && cursor.pos <= cursorPos) return cursor.pos;\n          cursor.popState();\n          if (cursor.ok && cursor.pos <= cursorPos) return cursor.pos;\n          cursor.popState();\n        }\n        if (cursor.ok) return cursor.pos;\n        if (direction === DIRECTION.FORCE_LEFT) return 0;\n        cursor.popState();\n        if (cursor.ok) return cursor.pos;\n        cursor.popState();\n        if (cursor.ok) return cursor.pos;\n        return 0;\n      }\n      if (direction === DIRECTION.RIGHT || direction === DIRECTION.FORCE_RIGHT) {\n        // forward flow\n        cursor.pushRightBeforeInput();\n        cursor.pushRightBeforeRequired();\n        if (cursor.pushRightBeforeFilled()) return cursor.pos;\n        if (direction === DIRECTION.FORCE_RIGHT) return this.displayValue.length;\n\n        // backward flow\n        cursor.popState();\n        if (cursor.ok) return cursor.pos;\n        cursor.popState();\n        if (cursor.ok) return cursor.pos;\n        return this.nearestInputPos(cursorPos, DIRECTION.LEFT);\n      }\n      return cursorPos;\n    }\n    totalInputPositions(fromPos, toPos) {\n      if (fromPos === void 0) {\n        fromPos = 0;\n      }\n      if (toPos === void 0) {\n        toPos = this.displayValue.length;\n      }\n      let total = 0;\n      this._forEachBlocksInRange(fromPos, toPos, (b, _, bFromPos, bToPos) => {\n        total += b.totalInputPositions(bFromPos, bToPos);\n      });\n      return total;\n    }\n\n    /** Get block by name */\n    maskedBlock(name) {\n      return this.maskedBlocks(name)[0];\n    }\n\n    /** Get all blocks by name */\n    maskedBlocks(name) {\n      const indices = this._maskedBlocks[name];\n      if (!indices) return [];\n      return indices.map(gi => this._blocks[gi]);\n    }\n    pad(flags) {\n      const details = new ChangeDetails();\n      this._forEachBlocksInRange(0, this.displayValue.length, b => details.aggregate(b.pad(flags)));\n      return details;\n    }\n  }\n  MaskedPattern.DEFAULTS = {\n    ...Masked.DEFAULTS,\n    lazy: true,\n    placeholderChar: '_'\n  };\n  MaskedPattern.STOP_CHAR = '`';\n  MaskedPattern.ESCAPE_CHAR = '\\\\';\n  MaskedPattern.InputDefinition = PatternInputDefinition;\n  MaskedPattern.FixedDefinition = PatternFixedDefinition;\n  IMask.MaskedPattern = MaskedPattern;\n\n  /** Pattern which accepts ranges */\n  class MaskedRange extends MaskedPattern {\n    /**\n      Optionally sets max length of pattern.\n      Used when pattern length is longer then `to` param length. Pads zeros at start in this case.\n    */\n\n    /** Min bound */\n\n    /** Max bound */\n\n    get _matchFrom() {\n      return this.maxLength - String(this.from).length;\n    }\n    constructor(opts) {\n      super(opts); // mask will be created in _update\n    }\n    updateOptions(opts) {\n      super.updateOptions(opts);\n    }\n    _update(opts) {\n      const {\n        to = this.to || 0,\n        from = this.from || 0,\n        maxLength = this.maxLength || 0,\n        autofix = this.autofix,\n        ...patternOpts\n      } = opts;\n      this.to = to;\n      this.from = from;\n      this.maxLength = Math.max(String(to).length, maxLength);\n      this.autofix = autofix;\n      const fromStr = String(this.from).padStart(this.maxLength, '0');\n      const toStr = String(this.to).padStart(this.maxLength, '0');\n      let sameCharsCount = 0;\n      while (sameCharsCount < toStr.length && toStr[sameCharsCount] === fromStr[sameCharsCount]) ++sameCharsCount;\n      patternOpts.mask = toStr.slice(0, sameCharsCount).replace(/0/g, '\\\\0') + '0'.repeat(this.maxLength - sameCharsCount);\n      super._update(patternOpts);\n    }\n    get isComplete() {\n      return super.isComplete && Boolean(this.value);\n    }\n    boundaries(str) {\n      let minstr = '';\n      let maxstr = '';\n      const [, placeholder, num] = str.match(/^(\\D*)(\\d*)(\\D*)/) || [];\n      if (num) {\n        minstr = '0'.repeat(placeholder.length) + num;\n        maxstr = '9'.repeat(placeholder.length) + num;\n      }\n      minstr = minstr.padEnd(this.maxLength, '0');\n      maxstr = maxstr.padEnd(this.maxLength, '9');\n      return [minstr, maxstr];\n    }\n    doPrepareChar(ch, flags) {\n      if (flags === void 0) {\n        flags = {};\n      }\n      let details;\n      [ch, details] = super.doPrepareChar(ch.replace(/\\D/g, ''), flags);\n      if (!ch) details.skip = !this.isComplete;\n      return [ch, details];\n    }\n    _appendCharRaw(ch, flags) {\n      if (flags === void 0) {\n        flags = {};\n      }\n      if (!this.autofix || this.value.length + 1 > this.maxLength) return super._appendCharRaw(ch, flags);\n      const fromStr = String(this.from).padStart(this.maxLength, '0');\n      const toStr = String(this.to).padStart(this.maxLength, '0');\n      const [minstr, maxstr] = this.boundaries(this.value + ch);\n      if (Number(maxstr) < this.from) return super._appendCharRaw(fromStr[this.value.length], flags);\n      if (Number(minstr) > this.to) {\n        if (!flags.tail && this.autofix === 'pad' && this.value.length + 1 < this.maxLength) {\n          return super._appendCharRaw(fromStr[this.value.length], flags).aggregate(this._appendCharRaw(ch, flags));\n        }\n        return super._appendCharRaw(toStr[this.value.length], flags);\n      }\n      return super._appendCharRaw(ch, flags);\n    }\n    doValidate(flags) {\n      const str = this.value;\n      const firstNonZero = str.search(/[^0]/);\n      if (firstNonZero === -1 && str.length <= this._matchFrom) return true;\n      const [minstr, maxstr] = this.boundaries(str);\n      return this.from <= Number(maxstr) && Number(minstr) <= this.to && super.doValidate(flags);\n    }\n    pad(flags) {\n      const details = new ChangeDetails();\n      if (this.value.length === this.maxLength) return details;\n      const value = this.value;\n      const padLength = this.maxLength - this.value.length;\n      if (padLength) {\n        this.reset();\n        for (let i = 0; i < padLength; ++i) {\n          details.aggregate(super._appendCharRaw('0', flags));\n        }\n\n        // append tail\n        value.split('').forEach(ch => this._appendCharRaw(ch));\n      }\n      return details;\n    }\n  }\n  IMask.MaskedRange = MaskedRange;\n\n  const DefaultPattern = 'd{.}`m{.}`Y';\n\n  // Make format and parse required when pattern is provided\n\n  /** Date mask */\n  class MaskedDate extends MaskedPattern {\n    static extractPatternOptions(opts) {\n      const {\n        mask,\n        pattern,\n        ...patternOpts\n      } = opts;\n      return {\n        ...patternOpts,\n        mask: isString(mask) ? mask : pattern\n      };\n    }\n\n    /** Pattern mask for date according to {@link MaskedDate#format} */\n\n    /** Start date */\n\n    /** End date */\n\n    /** Format typed value to string */\n\n    /** Parse string to get typed value */\n\n    constructor(opts) {\n      super(MaskedDate.extractPatternOptions({\n        ...MaskedDate.DEFAULTS,\n        ...opts\n      }));\n    }\n    updateOptions(opts) {\n      super.updateOptions(opts);\n    }\n    _update(opts) {\n      const {\n        mask,\n        pattern,\n        blocks,\n        ...patternOpts\n      } = {\n        ...MaskedDate.DEFAULTS,\n        ...opts\n      };\n      const patternBlocks = Object.assign({}, MaskedDate.GET_DEFAULT_BLOCKS());\n      // adjust year block\n      if (opts.min) patternBlocks.Y.from = opts.min.getFullYear();\n      if (opts.max) patternBlocks.Y.to = opts.max.getFullYear();\n      if (opts.min && opts.max && patternBlocks.Y.from === patternBlocks.Y.to) {\n        patternBlocks.m.from = opts.min.getMonth() + 1;\n        patternBlocks.m.to = opts.max.getMonth() + 1;\n        if (patternBlocks.m.from === patternBlocks.m.to) {\n          patternBlocks.d.from = opts.min.getDate();\n          patternBlocks.d.to = opts.max.getDate();\n        }\n      }\n      Object.assign(patternBlocks, this.blocks, blocks);\n      super._update({\n        ...patternOpts,\n        mask: isString(mask) ? mask : pattern,\n        blocks: patternBlocks\n      });\n    }\n    doValidate(flags) {\n      const date = this.date;\n      return super.doValidate(flags) && (!this.isComplete || this.isDateExist(this.value) && date != null && (this.min == null || this.min <= date) && (this.max == null || date <= this.max));\n    }\n\n    /** Checks if date is exists */\n    isDateExist(str) {\n      return this.format(this.parse(str, this), this).indexOf(str) >= 0;\n    }\n\n    /** Parsed Date */\n    get date() {\n      return this.typedValue;\n    }\n    set date(date) {\n      this.typedValue = date;\n    }\n    get typedValue() {\n      return this.isComplete ? super.typedValue : null;\n    }\n    set typedValue(value) {\n      super.typedValue = value;\n    }\n    maskEquals(mask) {\n      return mask === Date || super.maskEquals(mask);\n    }\n    optionsIsChanged(opts) {\n      return super.optionsIsChanged(MaskedDate.extractPatternOptions(opts));\n    }\n  }\n  MaskedDate.GET_DEFAULT_BLOCKS = () => ({\n    d: {\n      mask: MaskedRange,\n      from: 1,\n      to: 31,\n      maxLength: 2\n    },\n    m: {\n      mask: MaskedRange,\n      from: 1,\n      to: 12,\n      maxLength: 2\n    },\n    Y: {\n      mask: MaskedRange,\n      from: 1900,\n      to: 9999\n    }\n  });\n  MaskedDate.DEFAULTS = {\n    ...MaskedPattern.DEFAULTS,\n    mask: Date,\n    pattern: DefaultPattern,\n    format: (date, masked) => {\n      if (!date) return '';\n      const day = String(date.getDate()).padStart(2, '0');\n      const month = String(date.getMonth() + 1).padStart(2, '0');\n      const year = date.getFullYear();\n      return [day, month, year].join('.');\n    },\n    parse: (str, masked) => {\n      const [day, month, year] = str.split('.').map(Number);\n      return new Date(year, month - 1, day);\n    }\n  };\n  IMask.MaskedDate = MaskedDate;\n\n  /** Dynamic mask for choosing appropriate mask in run-time */\n  class MaskedDynamic extends Masked {\n    constructor(opts) {\n      super({\n        ...MaskedDynamic.DEFAULTS,\n        ...opts\n      });\n      this.currentMask = undefined;\n    }\n    updateOptions(opts) {\n      super.updateOptions(opts);\n    }\n    _update(opts) {\n      super._update(opts);\n      if ('mask' in opts) {\n        this.exposeMask = undefined;\n        // mask could be totally dynamic with only `dispatch` option\n        this.compiledMasks = Array.isArray(opts.mask) ? opts.mask.map(m => {\n          const {\n            expose,\n            ...maskOpts\n          } = normalizeOpts(m);\n          const masked = createMask({\n            overwrite: this._overwrite,\n            eager: this._eager,\n            skipInvalid: this._skipInvalid,\n            ...maskOpts\n          });\n          if (expose) this.exposeMask = masked;\n          return masked;\n        }) : [];\n\n        // this.currentMask = this.doDispatch(''); // probably not needed but lets see\n      }\n    }\n    _appendCharRaw(ch, flags) {\n      if (flags === void 0) {\n        flags = {};\n      }\n      const details = this._applyDispatch(ch, flags);\n      if (this.currentMask) {\n        details.aggregate(this.currentMask._appendChar(ch, this.currentMaskFlags(flags)));\n      }\n      return details;\n    }\n    _applyDispatch(appended, flags, tail) {\n      if (appended === void 0) {\n        appended = '';\n      }\n      if (flags === void 0) {\n        flags = {};\n      }\n      if (tail === void 0) {\n        tail = '';\n      }\n      const prevValueBeforeTail = flags.tail && flags._beforeTailState != null ? flags._beforeTailState._value : this.value;\n      const inputValue = this.rawInputValue;\n      const insertValue = flags.tail && flags._beforeTailState != null ? flags._beforeTailState._rawInputValue : inputValue;\n      const tailValue = inputValue.slice(insertValue.length);\n      const prevMask = this.currentMask;\n      const details = new ChangeDetails();\n      const prevMaskState = prevMask == null ? void 0 : prevMask.state;\n\n      // clone flags to prevent overwriting `_beforeTailState`\n      this.currentMask = this.doDispatch(appended, {\n        ...flags\n      }, tail);\n\n      // restore state after dispatch\n      if (this.currentMask) {\n        if (this.currentMask !== prevMask) {\n          // if mask changed reapply input\n          this.currentMask.reset();\n          if (insertValue) {\n            this.currentMask.append(insertValue, {\n              raw: true\n            });\n            details.tailShift = this.currentMask.value.length - prevValueBeforeTail.length;\n          }\n          if (tailValue) {\n            details.tailShift += this.currentMask.append(tailValue, {\n              raw: true,\n              tail: true\n            }).tailShift;\n          }\n        } else if (prevMaskState) {\n          // Dispatch can do something bad with state, so\n          // restore prev mask state\n          this.currentMask.state = prevMaskState;\n        }\n      }\n      return details;\n    }\n    _appendPlaceholder() {\n      const details = this._applyDispatch();\n      if (this.currentMask) {\n        details.aggregate(this.currentMask._appendPlaceholder());\n      }\n      return details;\n    }\n    _appendEager() {\n      const details = this._applyDispatch();\n      if (this.currentMask) {\n        details.aggregate(this.currentMask._appendEager());\n      }\n      return details;\n    }\n    appendTail(tail) {\n      const details = new ChangeDetails();\n      if (tail) details.aggregate(this._applyDispatch('', {}, tail));\n      return details.aggregate(this.currentMask ? this.currentMask.appendTail(tail) : super.appendTail(tail));\n    }\n    currentMaskFlags(flags) {\n      var _flags$_beforeTailSta, _flags$_beforeTailSta2;\n      return {\n        ...flags,\n        _beforeTailState: ((_flags$_beforeTailSta = flags._beforeTailState) == null ? void 0 : _flags$_beforeTailSta.currentMaskRef) === this.currentMask && ((_flags$_beforeTailSta2 = flags._beforeTailState) == null ? void 0 : _flags$_beforeTailSta2.currentMask) || flags._beforeTailState\n      };\n    }\n    doDispatch(appended, flags, tail) {\n      if (flags === void 0) {\n        flags = {};\n      }\n      if (tail === void 0) {\n        tail = '';\n      }\n      return this.dispatch(appended, this, flags, tail);\n    }\n    doValidate(flags) {\n      return super.doValidate(flags) && (!this.currentMask || this.currentMask.doValidate(this.currentMaskFlags(flags)));\n    }\n    doPrepare(str, flags) {\n      if (flags === void 0) {\n        flags = {};\n      }\n      let [s, details] = super.doPrepare(str, flags);\n      if (this.currentMask) {\n        let currentDetails;\n        [s, currentDetails] = super.doPrepare(s, this.currentMaskFlags(flags));\n        details = details.aggregate(currentDetails);\n      }\n      return [s, details];\n    }\n    doPrepareChar(str, flags) {\n      if (flags === void 0) {\n        flags = {};\n      }\n      let [s, details] = super.doPrepareChar(str, flags);\n      if (this.currentMask) {\n        let currentDetails;\n        [s, currentDetails] = super.doPrepareChar(s, this.currentMaskFlags(flags));\n        details = details.aggregate(currentDetails);\n      }\n      return [s, details];\n    }\n    reset() {\n      var _this$currentMask;\n      (_this$currentMask = this.currentMask) == null || _this$currentMask.reset();\n      this.compiledMasks.forEach(m => m.reset());\n    }\n    get value() {\n      return this.exposeMask ? this.exposeMask.value : this.currentMask ? this.currentMask.value : '';\n    }\n    set value(value) {\n      if (this.exposeMask) {\n        this.exposeMask.value = value;\n        this.currentMask = this.exposeMask;\n        this._applyDispatch();\n      } else super.value = value;\n    }\n    get unmaskedValue() {\n      return this.exposeMask ? this.exposeMask.unmaskedValue : this.currentMask ? this.currentMask.unmaskedValue : '';\n    }\n    set unmaskedValue(unmaskedValue) {\n      if (this.exposeMask) {\n        this.exposeMask.unmaskedValue = unmaskedValue;\n        this.currentMask = this.exposeMask;\n        this._applyDispatch();\n      } else super.unmaskedValue = unmaskedValue;\n    }\n    get typedValue() {\n      return this.exposeMask ? this.exposeMask.typedValue : this.currentMask ? this.currentMask.typedValue : '';\n    }\n    set typedValue(typedValue) {\n      if (this.exposeMask) {\n        this.exposeMask.typedValue = typedValue;\n        this.currentMask = this.exposeMask;\n        this._applyDispatch();\n        return;\n      }\n      let unmaskedValue = String(typedValue);\n\n      // double check it\n      if (this.currentMask) {\n        this.currentMask.typedValue = typedValue;\n        unmaskedValue = this.currentMask.unmaskedValue;\n      }\n      this.unmaskedValue = unmaskedValue;\n    }\n    get displayValue() {\n      return this.currentMask ? this.currentMask.displayValue : '';\n    }\n    get isComplete() {\n      var _this$currentMask2;\n      return Boolean((_this$currentMask2 = this.currentMask) == null ? void 0 : _this$currentMask2.isComplete);\n    }\n    get isFilled() {\n      var _this$currentMask3;\n      return Boolean((_this$currentMask3 = this.currentMask) == null ? void 0 : _this$currentMask3.isFilled);\n    }\n    remove(fromPos, toPos) {\n      const details = new ChangeDetails();\n      if (this.currentMask) {\n        details.aggregate(this.currentMask.remove(fromPos, toPos))\n        // update with dispatch\n        .aggregate(this._applyDispatch());\n      }\n      return details;\n    }\n    get state() {\n      var _this$currentMask4;\n      return {\n        ...super.state,\n        _rawInputValue: this.rawInputValue,\n        compiledMasks: this.compiledMasks.map(m => m.state),\n        currentMaskRef: this.currentMask,\n        currentMask: (_this$currentMask4 = this.currentMask) == null ? void 0 : _this$currentMask4.state\n      };\n    }\n    set state(state) {\n      const {\n        compiledMasks,\n        currentMaskRef,\n        currentMask,\n        ...maskedState\n      } = state;\n      if (compiledMasks) this.compiledMasks.forEach((m, mi) => m.state = compiledMasks[mi]);\n      if (currentMaskRef != null) {\n        this.currentMask = currentMaskRef;\n        this.currentMask.state = currentMask;\n      }\n      super.state = maskedState;\n    }\n    extractInput(fromPos, toPos, flags) {\n      return this.currentMask ? this.currentMask.extractInput(fromPos, toPos, flags) : '';\n    }\n    extractTail(fromPos, toPos) {\n      return this.currentMask ? this.currentMask.extractTail(fromPos, toPos) : super.extractTail(fromPos, toPos);\n    }\n    doCommit() {\n      if (this.currentMask) this.currentMask.doCommit();\n      super.doCommit();\n    }\n    nearestInputPos(cursorPos, direction) {\n      return this.currentMask ? this.currentMask.nearestInputPos(cursorPos, direction) : super.nearestInputPos(cursorPos, direction);\n    }\n    get overwrite() {\n      return this.currentMask ? this.currentMask.overwrite : this._overwrite;\n    }\n    set overwrite(overwrite) {\n      this._overwrite = overwrite;\n    }\n    get eager() {\n      return this.currentMask ? this.currentMask.eager : this._eager;\n    }\n    set eager(eager) {\n      this._eager = eager;\n    }\n    get skipInvalid() {\n      return this.currentMask ? this.currentMask.skipInvalid : this._skipInvalid;\n    }\n    set skipInvalid(skipInvalid) {\n      this._skipInvalid = skipInvalid;\n    }\n    get autofix() {\n      return this.currentMask ? this.currentMask.autofix : this._autofix;\n    }\n    set autofix(autofix) {\n      this._autofix = autofix;\n    }\n    maskEquals(mask) {\n      return Array.isArray(mask) ? this.compiledMasks.every((m, mi) => {\n        if (!mask[mi]) return;\n        const {\n          mask: oldMask,\n          ...restOpts\n        } = mask[mi];\n        return objectIncludes(m, restOpts) && m.maskEquals(oldMask);\n      }) : super.maskEquals(mask);\n    }\n    typedValueEquals(value) {\n      var _this$currentMask5;\n      return Boolean((_this$currentMask5 = this.currentMask) == null ? void 0 : _this$currentMask5.typedValueEquals(value));\n    }\n  }\n  /** Currently chosen mask */\n  /** Currently chosen mask */\n  /** Compliled {@link Masked} options */\n  /** Chooses {@link Masked} depending on input value */\n  MaskedDynamic.DEFAULTS = {\n    ...Masked.DEFAULTS,\n    dispatch: (appended, masked, flags, tail) => {\n      if (!masked.compiledMasks.length) return;\n      const inputValue = masked.rawInputValue;\n\n      // simulate input\n      const inputs = masked.compiledMasks.map((m, index) => {\n        const isCurrent = masked.currentMask === m;\n        const startInputPos = isCurrent ? m.displayValue.length : m.nearestInputPos(m.displayValue.length, DIRECTION.FORCE_LEFT);\n        if (m.rawInputValue !== inputValue) {\n          m.reset();\n          m.append(inputValue, {\n            raw: true\n          });\n        } else if (!isCurrent) {\n          m.remove(startInputPos);\n        }\n        m.append(appended, masked.currentMaskFlags(flags));\n        m.appendTail(tail);\n        return {\n          index,\n          weight: m.rawInputValue.length,\n          totalInputPositions: m.totalInputPositions(0, Math.max(startInputPos, m.nearestInputPos(m.displayValue.length, DIRECTION.FORCE_LEFT)))\n        };\n      });\n\n      // pop masks with longer values first\n      inputs.sort((i1, i2) => i2.weight - i1.weight || i2.totalInputPositions - i1.totalInputPositions);\n      return masked.compiledMasks[inputs[0].index];\n    }\n  };\n  IMask.MaskedDynamic = MaskedDynamic;\n\n  /** Pattern which validates enum values */\n  class MaskedEnum extends MaskedPattern {\n    constructor(opts) {\n      super({\n        ...MaskedEnum.DEFAULTS,\n        ...opts\n      }); // mask will be created in _update\n    }\n    updateOptions(opts) {\n      super.updateOptions(opts);\n    }\n    _update(opts) {\n      const {\n        enum: enum_,\n        ...eopts\n      } = opts;\n      if (enum_) {\n        const lengths = enum_.map(e => e.length);\n        const requiredLength = Math.min(...lengths);\n        const optionalLength = Math.max(...lengths) - requiredLength;\n        eopts.mask = '*'.repeat(requiredLength);\n        if (optionalLength) eopts.mask += '[' + '*'.repeat(optionalLength) + ']';\n        this.enum = enum_;\n      }\n      super._update(eopts);\n    }\n    _appendCharRaw(ch, flags) {\n      if (flags === void 0) {\n        flags = {};\n      }\n      const matchFrom = Math.min(this.nearestInputPos(0, DIRECTION.FORCE_RIGHT), this.value.length);\n      const matches = this.enum.filter(e => this.matchValue(e, this.unmaskedValue + ch, matchFrom));\n      if (matches.length) {\n        if (matches.length === 1) {\n          this._forEachBlocksInRange(0, this.value.length, (b, bi) => {\n            const mch = matches[0][bi];\n            if (bi >= this.value.length || mch === b.value) return;\n            b.reset();\n            b._appendChar(mch, flags);\n          });\n        }\n        const d = super._appendCharRaw(matches[0][this.value.length], flags);\n        if (matches.length === 1) {\n          matches[0].slice(this.unmaskedValue.length).split('').forEach(mch => d.aggregate(super._appendCharRaw(mch)));\n        }\n        return d;\n      }\n      return new ChangeDetails({\n        skip: !this.isComplete\n      });\n    }\n    extractTail(fromPos, toPos) {\n      if (fromPos === void 0) {\n        fromPos = 0;\n      }\n      if (toPos === void 0) {\n        toPos = this.displayValue.length;\n      }\n      // just drop tail\n      return new ContinuousTailDetails('', fromPos);\n    }\n    remove(fromPos, toPos) {\n      if (fromPos === void 0) {\n        fromPos = 0;\n      }\n      if (toPos === void 0) {\n        toPos = this.displayValue.length;\n      }\n      if (fromPos === toPos) return new ChangeDetails();\n      const matchFrom = Math.min(super.nearestInputPos(0, DIRECTION.FORCE_RIGHT), this.value.length);\n      let pos;\n      for (pos = fromPos; pos >= 0; --pos) {\n        const matches = this.enum.filter(e => this.matchValue(e, this.value.slice(matchFrom, pos), matchFrom));\n        if (matches.length > 1) break;\n      }\n      const details = super.remove(pos, toPos);\n      details.tailShift += pos - fromPos;\n      return details;\n    }\n    get isComplete() {\n      return this.enum.indexOf(this.value) >= 0;\n    }\n  }\n  /** Match enum value */\n  MaskedEnum.DEFAULTS = {\n    ...MaskedPattern.DEFAULTS,\n    matchValue: (estr, istr, matchFrom) => estr.indexOf(istr, matchFrom) === matchFrom\n  };\n  IMask.MaskedEnum = MaskedEnum;\n\n  /** Masking by custom Function */\n  class MaskedFunction extends Masked {\n    /** */\n\n    /** Enable characters overwriting */\n\n    /** */\n\n    /** */\n\n    /** */\n\n    updateOptions(opts) {\n      super.updateOptions(opts);\n    }\n    _update(opts) {\n      super._update({\n        ...opts,\n        validate: opts.mask\n      });\n    }\n  }\n  IMask.MaskedFunction = MaskedFunction;\n\n  var _MaskedNumber;\n  /** Number mask */\n  class MaskedNumber extends Masked {\n    /** Single char */\n\n    /** Single char */\n\n    /** Array of single chars */\n\n    /** */\n\n    /** */\n\n    /** Digits after point */\n\n    /** Flag to remove leading and trailing zeros in the end of editing */\n\n    /** Flag to pad trailing zeros after point in the end of editing */\n\n    /** Enable characters overwriting */\n\n    /** */\n\n    /** */\n\n    /** */\n\n    /** Format typed value to string */\n\n    /** Parse string to get typed value */\n\n    constructor(opts) {\n      super({\n        ...MaskedNumber.DEFAULTS,\n        ...opts\n      });\n    }\n    updateOptions(opts) {\n      super.updateOptions(opts);\n    }\n    _update(opts) {\n      super._update(opts);\n      this._updateRegExps();\n    }\n    _updateRegExps() {\n      const start = '^' + (this.allowNegative ? '[+|\\\\-]?' : '');\n      const mid = '\\\\d*';\n      const end = (this.scale ? \"(\" + escapeRegExp(this.radix) + \"\\\\d{0,\" + this.scale + \"})?\" : '') + '$';\n      this._numberRegExp = new RegExp(start + mid + end);\n      this._mapToRadixRegExp = new RegExp(\"[\" + this.mapToRadix.map(escapeRegExp).join('') + \"]\", 'g');\n      this._thousandsSeparatorRegExp = new RegExp(escapeRegExp(this.thousandsSeparator), 'g');\n    }\n    _removeThousandsSeparators(value) {\n      return value.replace(this._thousandsSeparatorRegExp, '');\n    }\n    _insertThousandsSeparators(value) {\n      // https://stackoverflow.com/questions/2901102/how-to-print-a-number-with-commas-as-thousands-separators-in-javascript\n      const parts = value.split(this.radix);\n      parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, this.thousandsSeparator);\n      return parts.join(this.radix);\n    }\n    doPrepareChar(ch, flags) {\n      if (flags === void 0) {\n        flags = {};\n      }\n      const [prepCh, details] = super.doPrepareChar(this._removeThousandsSeparators(this.scale && this.mapToRadix.length && (\n      /*\n        radix should be mapped when\n        1) input is done from keyboard = flags.input && flags.raw\n        2) unmasked value is set = !flags.input && !flags.raw\n        and should not be mapped when\n        1) value is set = flags.input && !flags.raw\n        2) raw value is set = !flags.input && flags.raw\n      */\n      flags.input && flags.raw || !flags.input && !flags.raw) ? ch.replace(this._mapToRadixRegExp, this.radix) : ch), flags);\n      if (ch && !prepCh) details.skip = true;\n      if (prepCh && !this.allowPositive && !this.value && prepCh !== '-') details.aggregate(this._appendChar('-'));\n      return [prepCh, details];\n    }\n    _separatorsCount(to, extendOnSeparators) {\n      if (extendOnSeparators === void 0) {\n        extendOnSeparators = false;\n      }\n      let count = 0;\n      for (let pos = 0; pos < to; ++pos) {\n        if (this._value.indexOf(this.thousandsSeparator, pos) === pos) {\n          ++count;\n          if (extendOnSeparators) to += this.thousandsSeparator.length;\n        }\n      }\n      return count;\n    }\n    _separatorsCountFromSlice(slice) {\n      if (slice === void 0) {\n        slice = this._value;\n      }\n      return this._separatorsCount(this._removeThousandsSeparators(slice).length, true);\n    }\n    extractInput(fromPos, toPos, flags) {\n      if (fromPos === void 0) {\n        fromPos = 0;\n      }\n      if (toPos === void 0) {\n        toPos = this.displayValue.length;\n      }\n      [fromPos, toPos] = this._adjustRangeWithSeparators(fromPos, toPos);\n      return this._removeThousandsSeparators(super.extractInput(fromPos, toPos, flags));\n    }\n    _appendCharRaw(ch, flags) {\n      if (flags === void 0) {\n        flags = {};\n      }\n      const prevBeforeTailValue = flags.tail && flags._beforeTailState ? flags._beforeTailState._value : this._value;\n      const prevBeforeTailSeparatorsCount = this._separatorsCountFromSlice(prevBeforeTailValue);\n      this._value = this._removeThousandsSeparators(this.value);\n      const oldValue = this._value;\n      this._value += ch;\n      const num = this.number;\n      let accepted = !isNaN(num);\n      let skip = false;\n      if (accepted) {\n        let fixedNum;\n        if (this.min != null && this.min < 0 && this.number < this.min) fixedNum = this.min;\n        if (this.max != null && this.max > 0 && this.number > this.max) fixedNum = this.max;\n        if (fixedNum != null) {\n          if (this.autofix) {\n            this._value = this.format(fixedNum, this).replace(MaskedNumber.UNMASKED_RADIX, this.radix);\n            skip || (skip = oldValue === this._value && !flags.tail); // if not changed on tail it's still ok to proceed\n          } else {\n            accepted = false;\n          }\n        }\n        accepted && (accepted = Boolean(this._value.match(this._numberRegExp)));\n      }\n      let appendDetails;\n      if (!accepted) {\n        this._value = oldValue;\n        appendDetails = new ChangeDetails();\n      } else {\n        appendDetails = new ChangeDetails({\n          inserted: this._value.slice(oldValue.length),\n          rawInserted: skip ? '' : ch,\n          skip\n        });\n      }\n      this._value = this._insertThousandsSeparators(this._value);\n      const beforeTailValue = flags.tail && flags._beforeTailState ? flags._beforeTailState._value : this._value;\n      const beforeTailSeparatorsCount = this._separatorsCountFromSlice(beforeTailValue);\n      appendDetails.tailShift += (beforeTailSeparatorsCount - prevBeforeTailSeparatorsCount) * this.thousandsSeparator.length;\n      return appendDetails;\n    }\n    _findSeparatorAround(pos) {\n      if (this.thousandsSeparator) {\n        const searchFrom = pos - this.thousandsSeparator.length + 1;\n        const separatorPos = this.value.indexOf(this.thousandsSeparator, searchFrom);\n        if (separatorPos <= pos) return separatorPos;\n      }\n      return -1;\n    }\n    _adjustRangeWithSeparators(from, to) {\n      const separatorAroundFromPos = this._findSeparatorAround(from);\n      if (separatorAroundFromPos >= 0) from = separatorAroundFromPos;\n      const separatorAroundToPos = this._findSeparatorAround(to);\n      if (separatorAroundToPos >= 0) to = separatorAroundToPos + this.thousandsSeparator.length;\n      return [from, to];\n    }\n    remove(fromPos, toPos) {\n      if (fromPos === void 0) {\n        fromPos = 0;\n      }\n      if (toPos === void 0) {\n        toPos = this.displayValue.length;\n      }\n      [fromPos, toPos] = this._adjustRangeWithSeparators(fromPos, toPos);\n      const valueBeforePos = this.value.slice(0, fromPos);\n      const valueAfterPos = this.value.slice(toPos);\n      const prevBeforeTailSeparatorsCount = this._separatorsCount(valueBeforePos.length);\n      this._value = this._insertThousandsSeparators(this._removeThousandsSeparators(valueBeforePos + valueAfterPos));\n      const beforeTailSeparatorsCount = this._separatorsCountFromSlice(valueBeforePos);\n      return new ChangeDetails({\n        tailShift: (beforeTailSeparatorsCount - prevBeforeTailSeparatorsCount) * this.thousandsSeparator.length\n      });\n    }\n    nearestInputPos(cursorPos, direction) {\n      if (!this.thousandsSeparator) return cursorPos;\n      switch (direction) {\n        case DIRECTION.NONE:\n        case DIRECTION.LEFT:\n        case DIRECTION.FORCE_LEFT:\n          {\n            const separatorAtLeftPos = this._findSeparatorAround(cursorPos - 1);\n            if (separatorAtLeftPos >= 0) {\n              const separatorAtLeftEndPos = separatorAtLeftPos + this.thousandsSeparator.length;\n              if (cursorPos < separatorAtLeftEndPos || this.value.length <= separatorAtLeftEndPos || direction === DIRECTION.FORCE_LEFT) {\n                return separatorAtLeftPos;\n              }\n            }\n            break;\n          }\n        case DIRECTION.RIGHT:\n        case DIRECTION.FORCE_RIGHT:\n          {\n            const separatorAtRightPos = this._findSeparatorAround(cursorPos);\n            if (separatorAtRightPos >= 0) {\n              return separatorAtRightPos + this.thousandsSeparator.length;\n            }\n          }\n      }\n      return cursorPos;\n    }\n    doCommit() {\n      if (this.value) {\n        const number = this.number;\n        let validnum = number;\n\n        // check bounds\n        if (this.min != null) validnum = Math.max(validnum, this.min);\n        if (this.max != null) validnum = Math.min(validnum, this.max);\n        if (validnum !== number) this.unmaskedValue = this.format(validnum, this);\n        let formatted = this.value;\n        if (this.normalizeZeros) formatted = this._normalizeZeros(formatted);\n        if (this.padFractionalZeros && this.scale > 0) formatted = this._padFractionalZeros(formatted);\n        this._value = formatted;\n      }\n      super.doCommit();\n    }\n    _normalizeZeros(value) {\n      const parts = this._removeThousandsSeparators(value).split(this.radix);\n\n      // remove leading zeros\n      parts[0] = parts[0].replace(/^(\\D*)(0*)(\\d*)/, (match, sign, zeros, num) => sign + num);\n      // add leading zero\n      if (value.length && !/\\d$/.test(parts[0])) parts[0] = parts[0] + '0';\n      if (parts.length > 1) {\n        parts[1] = parts[1].replace(/0*$/, ''); // remove trailing zeros\n        if (!parts[1].length) parts.length = 1; // remove fractional\n      }\n      return this._insertThousandsSeparators(parts.join(this.radix));\n    }\n    _padFractionalZeros(value) {\n      if (!value) return value;\n      const parts = value.split(this.radix);\n      if (parts.length < 2) parts.push('');\n      parts[1] = parts[1].padEnd(this.scale, '0');\n      return parts.join(this.radix);\n    }\n    doSkipInvalid(ch, flags, checkTail) {\n      if (flags === void 0) {\n        flags = {};\n      }\n      const dropFractional = this.scale === 0 && ch !== this.thousandsSeparator && (ch === this.radix || ch === MaskedNumber.UNMASKED_RADIX || this.mapToRadix.includes(ch));\n      return super.doSkipInvalid(ch, flags, checkTail) && !dropFractional;\n    }\n    get unmaskedValue() {\n      return this._removeThousandsSeparators(this._normalizeZeros(this.value)).replace(this.radix, MaskedNumber.UNMASKED_RADIX);\n    }\n    set unmaskedValue(unmaskedValue) {\n      super.unmaskedValue = unmaskedValue;\n    }\n    get typedValue() {\n      return this.parse(this.unmaskedValue, this);\n    }\n    set typedValue(n) {\n      this.rawInputValue = this.format(n, this).replace(MaskedNumber.UNMASKED_RADIX, this.radix);\n    }\n\n    /** Parsed Number */\n    get number() {\n      return this.typedValue;\n    }\n    set number(number) {\n      this.typedValue = number;\n    }\n    get allowNegative() {\n      return this.min != null && this.min < 0 || this.max != null && this.max < 0;\n    }\n    get allowPositive() {\n      return this.min != null && this.min > 0 || this.max != null && this.max > 0;\n    }\n    typedValueEquals(value) {\n      // handle  0 -> '' case (typed = 0 even if value = '')\n      // for details see https://github.com/uNmAnNeR/imaskjs/issues/134\n      return (super.typedValueEquals(value) || MaskedNumber.EMPTY_VALUES.includes(value) && MaskedNumber.EMPTY_VALUES.includes(this.typedValue)) && !(value === 0 && this.value === '');\n    }\n  }\n  _MaskedNumber = MaskedNumber;\n  MaskedNumber.UNMASKED_RADIX = '.';\n  MaskedNumber.EMPTY_VALUES = [...Masked.EMPTY_VALUES, 0];\n  MaskedNumber.DEFAULTS = {\n    ...Masked.DEFAULTS,\n    mask: Number,\n    radix: ',',\n    thousandsSeparator: '',\n    mapToRadix: [_MaskedNumber.UNMASKED_RADIX],\n    min: Number.MIN_SAFE_INTEGER,\n    max: Number.MAX_SAFE_INTEGER,\n    scale: 2,\n    normalizeZeros: true,\n    padFractionalZeros: false,\n    parse: Number,\n    format: n => n.toLocaleString('en-US', {\n      useGrouping: false,\n      maximumFractionDigits: 20\n    })\n  };\n  IMask.MaskedNumber = MaskedNumber;\n\n  /** Mask pipe source and destination types */\n  const PIPE_TYPE = {\n    MASKED: 'value',\n    UNMASKED: 'unmaskedValue',\n    TYPED: 'typedValue'\n  };\n  /** Creates new pipe function depending on mask type, source and destination options */\n  function createPipe(arg, from, to) {\n    if (from === void 0) {\n      from = PIPE_TYPE.MASKED;\n    }\n    if (to === void 0) {\n      to = PIPE_TYPE.MASKED;\n    }\n    const masked = createMask(arg);\n    return value => masked.runIsolated(m => {\n      m[from] = value;\n      return m[to];\n    });\n  }\n\n  /** Pipes value through mask depending on mask type, source and destination options */\n  function pipe(value, mask, from, to) {\n    return createPipe(mask, from, to)(value);\n  }\n  IMask.PIPE_TYPE = PIPE_TYPE;\n  IMask.createPipe = createPipe;\n  IMask.pipe = pipe;\n\n  /** Pattern mask */\n  class RepeatBlock extends MaskedPattern {\n    get repeatFrom() {\n      var _ref;\n      return (_ref = Array.isArray(this.repeat) ? this.repeat[0] : this.repeat === Infinity ? 0 : this.repeat) != null ? _ref : 0;\n    }\n    get repeatTo() {\n      var _ref2;\n      return (_ref2 = Array.isArray(this.repeat) ? this.repeat[1] : this.repeat) != null ? _ref2 : Infinity;\n    }\n    constructor(opts) {\n      super(opts);\n    }\n    updateOptions(opts) {\n      super.updateOptions(opts);\n    }\n    _update(opts) {\n      var _ref3, _ref4, _this$_blocks;\n      const {\n        repeat,\n        ...blockOpts\n      } = normalizeOpts(opts); // TODO type\n      this._blockOpts = Object.assign({}, this._blockOpts, blockOpts);\n      const block = createMask(this._blockOpts);\n      this.repeat = (_ref3 = (_ref4 = repeat != null ? repeat : block.repeat) != null ? _ref4 : this.repeat) != null ? _ref3 : Infinity; // TODO type\n\n      super._update({\n        mask: 'm'.repeat(Math.max(this.repeatTo === Infinity && ((_this$_blocks = this._blocks) == null ? void 0 : _this$_blocks.length) || 0, this.repeatFrom)),\n        blocks: {\n          m: block\n        },\n        eager: block.eager,\n        overwrite: block.overwrite,\n        skipInvalid: block.skipInvalid,\n        lazy: block.lazy,\n        placeholderChar: block.placeholderChar,\n        displayChar: block.displayChar\n      });\n    }\n    _allocateBlock(bi) {\n      if (bi < this._blocks.length) return this._blocks[bi];\n      if (this.repeatTo === Infinity || this._blocks.length < this.repeatTo) {\n        this._blocks.push(createMask(this._blockOpts));\n        this.mask += 'm';\n        return this._blocks[this._blocks.length - 1];\n      }\n    }\n    _appendCharRaw(ch, flags) {\n      if (flags === void 0) {\n        flags = {};\n      }\n      const details = new ChangeDetails();\n      for (let bi = (_this$_mapPosToBlock$ = (_this$_mapPosToBlock = this._mapPosToBlock(this.displayValue.length)) == null ? void 0 : _this$_mapPosToBlock.index) != null ? _this$_mapPosToBlock$ : Math.max(this._blocks.length - 1, 0), block, allocated;\n      // try to get a block or\n      // try to allocate a new block if not allocated already\n      block = (_this$_blocks$bi = this._blocks[bi]) != null ? _this$_blocks$bi : allocated = !allocated && this._allocateBlock(bi); ++bi) {\n        var _this$_mapPosToBlock$, _this$_mapPosToBlock, _this$_blocks$bi, _flags$_beforeTailSta;\n        const blockDetails = block._appendChar(ch, {\n          ...flags,\n          _beforeTailState: (_flags$_beforeTailSta = flags._beforeTailState) == null || (_flags$_beforeTailSta = _flags$_beforeTailSta._blocks) == null ? void 0 : _flags$_beforeTailSta[bi]\n        });\n        if (blockDetails.skip && allocated) {\n          // remove the last allocated block and break\n          this._blocks.pop();\n          this.mask = this.mask.slice(1);\n          break;\n        }\n        details.aggregate(blockDetails);\n        if (blockDetails.consumed) break; // go next char\n      }\n      return details;\n    }\n    _trimEmptyTail(fromPos, toPos) {\n      var _this$_mapPosToBlock2, _this$_mapPosToBlock3;\n      if (fromPos === void 0) {\n        fromPos = 0;\n      }\n      const firstBlockIndex = Math.max(((_this$_mapPosToBlock2 = this._mapPosToBlock(fromPos)) == null ? void 0 : _this$_mapPosToBlock2.index) || 0, this.repeatFrom, 0);\n      let lastBlockIndex;\n      if (toPos != null) lastBlockIndex = (_this$_mapPosToBlock3 = this._mapPosToBlock(toPos)) == null ? void 0 : _this$_mapPosToBlock3.index;\n      if (lastBlockIndex == null) lastBlockIndex = this._blocks.length - 1;\n      let removeCount = 0;\n      for (let blockIndex = lastBlockIndex; firstBlockIndex <= blockIndex; --blockIndex, ++removeCount) {\n        if (this._blocks[blockIndex].unmaskedValue) break;\n      }\n      if (removeCount) {\n        this._blocks.splice(lastBlockIndex - removeCount + 1, removeCount);\n        this.mask = this.mask.slice(removeCount);\n      }\n    }\n    reset() {\n      super.reset();\n      this._trimEmptyTail();\n    }\n    remove(fromPos, toPos) {\n      if (fromPos === void 0) {\n        fromPos = 0;\n      }\n      if (toPos === void 0) {\n        toPos = this.displayValue.length;\n      }\n      const removeDetails = super.remove(fromPos, toPos);\n      this._trimEmptyTail(fromPos, toPos);\n      return removeDetails;\n    }\n    totalInputPositions(fromPos, toPos) {\n      if (fromPos === void 0) {\n        fromPos = 0;\n      }\n      if (toPos == null && this.repeatTo === Infinity) return Infinity;\n      return super.totalInputPositions(fromPos, toPos);\n    }\n    get state() {\n      return super.state;\n    }\n    set state(state) {\n      this._blocks.length = state._blocks.length;\n      this.mask = this.mask.slice(0, this._blocks.length);\n      super.state = state;\n    }\n  }\n  IMask.RepeatBlock = RepeatBlock;\n\n  try {\n    globalThis.IMask = IMask;\n  } catch {}\n\n  exports.ChangeDetails = ChangeDetails;\n  exports.ChunksTailDetails = ChunksTailDetails;\n  exports.DIRECTION = DIRECTION;\n  exports.HTMLContenteditableMaskElement = HTMLContenteditableMaskElement;\n  exports.HTMLInputMaskElement = HTMLInputMaskElement;\n  exports.HTMLMaskElement = HTMLMaskElement;\n  exports.InputMask = InputMask;\n  exports.MaskElement = MaskElement;\n  exports.Masked = Masked;\n  exports.MaskedDate = MaskedDate;\n  exports.MaskedDynamic = MaskedDynamic;\n  exports.MaskedEnum = MaskedEnum;\n  exports.MaskedFunction = MaskedFunction;\n  exports.MaskedNumber = MaskedNumber;\n  exports.MaskedPattern = MaskedPattern;\n  exports.MaskedRange = MaskedRange;\n  exports.MaskedRegExp = MaskedRegExp;\n  exports.PIPE_TYPE = PIPE_TYPE;\n  exports.PatternFixedDefinition = PatternFixedDefinition;\n  exports.PatternInputDefinition = PatternInputDefinition;\n  exports.RepeatBlock = RepeatBlock;\n  exports.createMask = createMask;\n  exports.createPipe = createPipe;\n  exports.default = IMask;\n  exports.forceDirection = forceDirection;\n  exports.normalizeOpts = normalizeOpts;\n  exports.pipe = pipe;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=imask.js.map\n","import \"%modules%/password-toggle/password-toggle\";\nimport \"%modules%/user-type/user-type\";","document.querySelectorAll('input[type=\"tel\"]').forEach((e) => new IMask(e, { mask: \"+7 (000) 000-00-00\" }));\n\nvar maskEmail = {\n    mask: function (value) {\n        if (/^[a-z0-9_\\.-]+$/.test(value)) return true;\n        if (/^[a-z0-9_\\.-]+@$/.test(value)) return true;\n        if (/^[a-z0-9_\\.-]+@[a-z0-9-]+$/.test(value)) return true;\n        if (/^[a-z0-9_\\.-]+@[a-z0-9-]+\\.$/.test(value)) return true;\n        if (/^[a-z0-9_\\.-]+@[a-z0-9-]+\\.[a-z]{1,4}$/.test(value)) return true;\n        if (/^[a-z0-9_\\.-]+@[a-z0-9-]+\\.[a-z]{1,4}\\.$/.test(value)) return true;\n        if (/^[a-z0-9_\\.-]+@[a-z0-9-]+\\.[a-z]{1,4}\\.[a-z]{1,4}$/.test(value)) return true;\n        return false;\n    },\n    lazy: false\n};\n\ndocument.querySelectorAll('input[type=\"email\"]').forEach((e) => new IMask(e, maskEmail));","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import \"./imask\";\nimport \"./import/modules\";\nimport \"./script\";"],"names":["document","addEventListener","e","elem","target","closest","input","previousElementSibling","type","querySelector","classList","remove","querySelectorAll","forEach","add","dataset","global","factory","exports","module","define","amd","globalThis","self","IMask","isString","str","String","isObject","obj","_obj$constructor","constructor","name","pick","keys","Array","isArray","_","k","includes","Object","entries","reduce","acc","_ref","v","DIRECTION","NONE","LEFT","FORCE_LEFT","RIGHT","FORCE_RIGHT","forceDirection","direction","escapeRegExp","replace","objectIncludes","b","a","arrA","arrB","i","length","dateA","Date","dateB","getTime","regexpA","RegExp","regexpB","toString","prototype","hasOwnProperty","call","ActionDetails","opts","assign","value","slice","startChangePos","oldValue","oldSelection","start","insertedCount","cursorPos","end","Math","min","substr","max","removedCount","substring","el","InputMask","maskedClass","mask","Error","MaskedRegExp","MaskedPattern","MaskedDate","Number","MaskedNumber","MaskedDynamic","Masked","Function","MaskedFunction","console","warn","normalizeOpts","undefined","instanceOpts","_mask","startsWith","createMask","nOpts","MaskedClass","MaskElement","_unsafeSelectionStart","_unsafeSelectionEnd","selectionStart","selectionEnd","_unsafeSelect","KEY_Z","KEY_Y","HTMLMaskElement","_onKeydown","bind","_onInput","_onBeforeinput","_onCompositionEnd","_this$input$getRootNo","_this$input$getRootNo2","_this$input","getRootNode","rootElement","activeElement","handlers","drop","click","focus","commit","_handlers","redo","keyCode","shiftKey","metaKey","ctrlKey","preventDefault","undo","isComposing","selectionChange","inputType","removeEventListener","HTMLInputMaskElement","setSelectionRange","HTMLContenteditableMaskElement","root","selection","getSelection","anchorOffset","focusOffset","createRange","range","setStart","firstChild","setEnd","lastChild","removeAllRanges","addRange","textContent","InputHistory","states","currentIndex","state","push","MAX_LENGTH","shift","steps","currentState","go","isContentEditable","tagName","masked","_listeners","_value","_unmaskedValue","_rawInputValue","history","_saveSelection","_onChange","_onDrop","_onFocus","_onClick","_onUndo","_onRedo","alignCursor","alignCursorFriendly","_bindEvents","updateValue","_this$masked","maskEquals","updateOptions","unmaskedValue","updateControl","rawInputValue","typedValue","val","typedValueEquals","displayValue","bindEvents","unbindEvents","ev","listeners","l","_cursorChanging","_changingCursorPos","pos","isActive","select","_selection","newUnmaskedValue","newValue","newRawInputValue","newDisplayValue","isChanged","_fireChangeEvents","_historyChanging","isEmpty","restOpts","updateMask","updateOpts","optionsIsChanged","_delayUpdateCursor","_abortUpdateCursor","setTimeout","_fireEvent","_inputEvent","isComplete","clearTimeout","nearestInputPos","handler","hIndex","indexOf","splice","details","oldRawValue","offset","removed","inserted","removeDirection","raw","doCommit","stopPropagation","_applyHistoryState","_unbindEvents","ChangeDetails","rawInserted","tailShift","skip","Boolean","prep","ContinuousTailDetails","from","stop","tail","append","aggregate","_appendPlaceholder","beforePos","shiftChar","_update","DEFAULTS","_initialized","withValueRefresh","resolve","flags","reset","parse","format","extractInput","fromPos","toPos","appendTo","ch","checkTail","consistentState","doPrepareChar","_appendCharRaw","autofix","noFixState","fixDetails","pad","chDetails","equals","consistentTail","appended","doValidate","beforeTailState","overwrite","unshift","tailDetails","appendTail","_beforeTailState","doPrepare","ci","d","_appendChar","doSkipInvalid","eager","_appendEager","fn","_refreshing","rawInput","ret","_isolated","skipInvalid","normalize","prepare","prepareChar","validate","parent","deleteCount","tailPos","extractTail","eagerRemove","valLength","tval","EMPTY_VALUES","ChunksTailDetails","chunks","map","join","tailChunk","lastChunk","extendLast","extend","firstTailChunk","blockIndex","chunk","lastBlockIter","_mapPosToBlock","chunkBlock","index","_stops","_blocks","remainChars","c","props","cstate","chunkShiftPos","PatternCursor","_log","ok","_blockStartPos","s","pop","block","pushState","bindBlock","_this$block","_pushLeft","isFixed","isOptional","_pushRight","PatternFixedDefinition","isUnmasking","_isRawInput","minPos","maxPos","isFilled","appendEager","isResolved","PatternInputDefinition","placeholderChar","displayChar","lazy","maskOpts","currentMaskFlags","boundPos","_flags$_beforeTailSta","DEFAULT_DEFINITIONS","search","definitions","_rebuildMask","defs","exposeBlock","_maskedBlocks","pattern","unmaskingBlock","optionalBlock","blocks","p","bNames","filter","bName","sort","expose","repeat","bOpts","blockOpts","maskedBlock","RepeatBlock","char","isInput","STOP_CHAR","ESCAPE_CHAR","def","maskedState","bi","every","_this$_mapPosToBlock","startBlockIndex","blockIter","blockDetails","consumed","chunkTail","_forEachBlocksInRange","bFromPos","bToPos","blockChunk","_findStopBefore","stopBefore","si","toBlockIndex","startBlockIter","endBlockIndex","_blocks2","accVal","blockStartPos","fromBlockIter","toBlockIter","isSameBlock","fromBlockStartPos","fromBlockEndPos","removeDetails","cursor","pushRightBeforeInput","popState","pushLeftBeforeInput","pushRightBeforeFilled","pushLeftBeforeRequired","pushLeftBeforeFilled","pushRightBeforeRequired","total","totalInputPositions","maskedBlocks","indices","gi","InputDefinition","FixedDefinition","MaskedRange","maxLength","to","patternOpts","fromStr","padStart","toStr","sameCharsCount","minstr","maxstr","match","placeholder","num","padEnd","boundaries","firstNonZero","_matchFrom","padLength","split","DefaultPattern","extractPatternOptions","patternBlocks","GET_DEFAULT_BLOCKS","Y","getFullYear","m","getMonth","getDate","date","isDateExist","day","month","year","currentMask","exposeMask","compiledMasks","_overwrite","_eager","_skipInvalid","_applyDispatch","prevValueBeforeTail","inputValue","insertValue","tailValue","prevMask","prevMaskState","doDispatch","_flags$_beforeTailSta2","currentMaskRef","dispatch","currentDetails","_this$currentMask","_this$currentMask2","_this$currentMask3","_this$currentMask4","mi","_autofix","oldMask","_this$currentMask5","inputs","isCurrent","startInputPos","weight","i1","i2","MaskedEnum","enum_","eopts","lengths","requiredLength","optionalLength","matchFrom","matches","matchValue","mch","estr","istr","_MaskedNumber","_updateRegExps","allowNegative","mid","scale","radix","_numberRegExp","_mapToRadixRegExp","mapToRadix","_thousandsSeparatorRegExp","thousandsSeparator","parts","_removeThousandsSeparators","prepCh","allowPositive","extendOnSeparators","count","_separatorsCount","_adjustRangeWithSeparators","prevBeforeTailValue","prevBeforeTailSeparatorsCount","_separatorsCountFromSlice","number","accepted","isNaN","fixedNum","UNMASKED_RADIX","appendDetails","_insertThousandsSeparators","beforeTailValue","beforeTailSeparatorsCount","searchFrom","separatorPos","separatorAroundFromPos","_findSeparatorAround","separatorAroundToPos","valueBeforePos","valueAfterPos","separatorAtLeftPos","separatorAtLeftEndPos","separatorAtRightPos","validnum","formatted","normalizeZeros","_normalizeZeros","padFractionalZeros","_padFractionalZeros","sign","zeros","test","dropFractional","n","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","toLocaleString","useGrouping","maximumFractionDigits","PIPE_TYPE","MASKED","UNMASKED","TYPED","createPipe","arg","runIsolated","pipe","Infinity","_ref2","_ref3","_ref4","_this$_blocks","_blockOpts","repeatTo","repeatFrom","_this$_mapPosToBlock$","allocated","_this$_blocks$bi","_allocateBlock","_this$_mapPosToBlock2","_this$_mapPosToBlock3","firstBlockIndex","lastBlockIndex","removeCount","_trimEmptyTail","defineProperty","maskEmail"],"sourceRoot":""}